/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 17 23:32:51 GMT 2018
 */

package uMer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.Point2D;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.IsoChronology;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.junit.runner.RunWith;
import uMer.Client;
import uMer.Trip;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Client_ESTest extends Client_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Period period0 = Period.ZERO;
      IsoChronology isoChronology0 = period0.getChronology();
      ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds((-1096));
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0, (ZoneId) zoneOffset0);
      Point2D.Double point2D_Double0 = new Point2D.Double((-1096), 2.0);
      Point2D.Double point2D_Double1 = new Point2D.Double();
      Trip trip0 = new Trip((-1096), point2D_Double0, point2D_Double1, (Double) point2D_Double0.x, (Double) (-1096.0), localDate0, (String) null, "\nPosi\u00E7\u00E3o : (", "", 142, 1673.9846949315, point2D_Double1, 0.0, 1156.336328, 0.0);
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Client client0 = new Client((String) null, (String) null, (String) null, (String) null, localDate0, point2D_Double1, 0.0, arrayList0, 0, 2490.702490431581, false, "Ihm");
      client0.addTrip(trip0);
      assertEquals((-273), client0.getPoints());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client("", "", "", "", localDate0);
      Point2D.Double point2D_Double0 = new Point2D.Double((-1358), (-1358));
      Trip trip0 = new Trip((-1358), point2D_Double0, point2D_Double0, (Double) (-1358.0), (Double) (-1358.0), localDate0, "", "", "", (-1358), (-1358), point2D_Double0, (-1358.0), (-1358.0), (-1358.0));
      client0.addTrip(trip0);
      assertEquals((-679), client0.getPoints());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client("NAwzwlo}-w8c", "NAwzwlo}-w8c", (String) null, (String) null, localDate0);
      assertFalse(client0.isPremium());
      
      client0.setPremium(true);
      boolean boolean0 = client0.isPremium();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-1471L));
      Point2D.Double point2D_Double0 = new Point2D.Double((-1471L), (-1471L));
      Client client0 = new Client("N\u00E3o classificado", "N\u00E3o classificado", "**", "N\u00E3o classificado", localDate0, point2D_Double0, 1.0, (ArrayList<Trip>) null, 0, 0, false, ">&XzmsnH2VSx[oE");
      client0.setQueue("**");
      client0.getQueue();
      assertEquals(0, client0.getPoints());
      assertFalse(client0.isPremium());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client(")`tKIKlE1\"Ekr", "CL", "8ibx3<Woa?", ")`tKIKlE1\"Ekr", localDate0);
      client0.setQueue("");
      client0.getQueue();
      assertFalse(client0.isPremium());
      assertEquals(0, client0.getPoints());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Trip trip0 = new Trip();
      LocalDate localDate0 = trip0.getDate();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Client client0 = new Client((String) null, "\nPremium : ", "\nPremium : ", (String) null, localDate0, point2D_Double0, 0.0, (ArrayList<Trip>) null, 3343, 2.0, true, "L.y=!;@HCBg+qZBzn3");
      int int0 = client0.getPoints();
      assertEquals(3343, int0);
      assertTrue(client0.isPremium());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Trip trip0 = new Trip();
      LocalDate localDate0 = trip0.getDate();
      Point2D.Double point2D_Double0 = trip0.getStart();
      Client client0 = new Client("17a+)i,9<j|{", ",", "", "17a+)i,9<j|{", localDate0);
      ArrayList<Trip> arrayList0 = client0.getTrips();
      Client client1 = new Client((String) null, ",", "Rm~vYCUXbRZ?.8NqmC,", ",", localDate0, point2D_Double0, 0.0, arrayList0, (-1485), 1.0, false, "7?Ey.Sj");
      int int0 = client1.getPoints();
      assertFalse(client0.isPremium());
      assertEquals((-1485), int0);
      assertFalse(client1.isPremium());
      assertEquals(0, client0.getPoints());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client("NAwzwlo}-w8c", "NAwzwlo}-w8c", (String) null, (String) null, localDate0);
      assertFalse(client0.isPremium());
      
      client0.setPremium(true);
      client0.clone();
      assertTrue(client0.isPremium());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Point2D.Double point2D_Double0 = new Point2D.Double(0L, (-540.0703772045));
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Client client0 = new Client((String) null, "Ax}DtAL`a+BiFw", "bvt", "\u20AC", localDate0, point2D_Double0, (-540.0703772045), arrayList0, 3114, 0.0, false, "bvt");
      Client client1 = client0.clone();
      assertEquals(3114, client1.getPoints());
      assertFalse(client1.isPremium());
      assertEquals(3114, client0.getPoints());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client((String) null, (String) null, (String) null, (String) null, localDate0);
      Point2D.Double point2D_Double0 = client0.getPosition();
      Trip trip0 = new Trip(4015, point2D_Double0, point2D_Double0, (Double) 0.0, (Double) point2D_Double0.x, localDate0, "", (String) null, "", (-18), 2.0, point2D_Double0, (-18), 1076.18972560459, 1154.28652);
      client0.addTrip(trip0);
      assertEquals(0.0, point2D_Double0.y, 0.01);
      
      Client client1 = client0.clone();
      assertEquals(0.0, client1.getMoney(), 0.01);
      assertFalse(client1.isPremium());
      assertEquals(0, client1.getPoints());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Point2D.Double point2D_Double0 = new Point2D.Double(0L, 0.0);
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Client client0 = new Client("['", "\nDisponibilidade : ", "['", "\nDisponibilidade : ", localDate0, point2D_Double0, 0.0, arrayList0, 3331, 3331, false, ";kHs:Q;E0aiY>ms/");
      Client client1 = client0.clone();
      assertEquals(3331, client1.getPoints());
      assertEquals(3331, client0.getPoints());
      assertFalse(client1.isPremium());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-1089L));
      Point2D.Double point2D_Double0 = new Point2D.Double(2.0, 0);
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Client client0 = new Client((String) null, (String) null, (String) null, (String) null, localDate0, point2D_Double0, 2.0, arrayList0, (-1), (-1089L), false, ")>(^r");
      Client client1 = client0.clone();
      assertEquals((-1), client1.getPoints());
      assertFalse(client1.isPremium());
      assertEquals((-1), client0.getPoints());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Client client0 = new Client("o|-Aju_:5", "o|-Aju_:5", "o|-Aju_:5", "o|-Aju_:5", localDate0, point2D_Double0, 0.0, arrayList0, 2484, 2484, false, "o|-Aju_:5");
      // Undeclared exception!
      try { 
        client0.setPosition((Point2D.Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.Client", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Client client0 = new Client("I&?vwsCh,:-dq^", "I&?vwsCh,:-dq^", "", " ", localDate0);
      ArrayList<Trip> arrayList0 = client0.getTrips();
      arrayList0.add((Trip) null);
      Client client1 = new Client("I&?vwsCh,:-dq^", "I&?vwsCh,:-dq^", "", "", localDate0, point2D_Double0, (-1.0), arrayList0, 0, (-1.0), false, " ");
      // Undeclared exception!
      try { 
        client1.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Client client0 = new Client("", ") ---> (", ") ---> (", ") ---> (", localDate0);
      // Undeclared exception!
      try { 
        client0.addTrip((Trip) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Client client0 = null;
      try {
        client0 = new Client((Client) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.Client", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, 1.0);
      Client client0 = null;
      try {
        client0 = new Client("g-", "", "S`Q/g[i?;&", "S`Q/g[i?;&", (LocalDate) null, point2D_Double0, 0.0, (ArrayList<Trip>) null, (-2638), (-2638), false, "-U_");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Client client0 = null;
      try {
        client0 = new Client("", "m+MyGtIB", "m+MyGtIB", "m+MyGtIB", (LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-1471L));
      Point2D.Double point2D_Double0 = new Point2D.Double((-1471L), (-1471L));
      Client client0 = new Client("N\u00E3o classificado", "N\u00E3o classificado", "**", "N\u00E3o classificado", localDate0, point2D_Double0, 1.0, (ArrayList<Trip>) null, 0, 0, false, ">&XzmsnH2VSx[oE");
      Client client1 = new Client(client0);
      assertFalse(client1.isPremium());
      assertEquals(0, client1.getPoints());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-1471L));
      Point2D.Double point2D_Double0 = new Point2D.Double((-1471L), (-1471L));
      Client client0 = new Client("N\u00E3o classificado", "N\u00E3o classificado", "**", "N\u00E3o classificado", localDate0, point2D_Double0, 1.0, (ArrayList<Trip>) null, 0, 0, false, ">&XzmsnH2VSx[oE");
      client0.getQueue();
      assertEquals(0, client0.getPoints());
      assertFalse(client0.isPremium());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client((String) null, (String) null, (String) null, (String) null, localDate0);
      int int0 = client0.getPoints();
      assertFalse(client0.isPremium());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client((String) null, (String) null, (String) null, (String) null, localDate0);
      boolean boolean0 = client0.isPremium();
      assertEquals(0, client0.getPoints());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Client client0 = new Client("", ") ---> (", ") ---> (", ") ---> (", localDate0);
      client0.setPoints((-1791));
      assertEquals((-1791), client0.getPoints());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Client client0 = null;
      try {
        client0 = new Client();
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Invalid value for MonthOfYear (valid values 1 - 12): 0
         //
         verifyException("java.time.temporal.ValueRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Client client0 = new Client("", ") ---> (", ") ---> (", ") ---> (", localDate0);
      String string0 = client0.toString();
      assertEquals("Utilizador - ) ---> (\neMail : \nPassword : ) ---> (\nMorada : ) ---> (\nData de nascimento : 1970-01-01\nDist\u00E2ncia Total : 0.0\nDinheiro gasto/ganho : 0.0\nN\u00FAmero de viagens :0\nPosi\u00E7\u00E3o : (0.0,0.0)\nPontos : 0\nPremium : false\nFila de espera : null", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client("DG!", "DG!", "DG!", "DG!", localDate0);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      client0.setPosition(point2D_Double0);
      assertEquals(0, client0.getPoints());
      assertFalse(client0.isPremium());
  }
}
