/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 17 23:29:37 GMT 2018
 */

package uMer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.Point2D;
import java.time.LocalDate;
import java.time.Month;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.IsoChronology;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.junit.runner.RunWith;
import uMer.Driver;
import uMer.Trip;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Driver_ESTest extends Driver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Month month0 = Month.AUGUST;
      LocalDate localDate0 = MockLocalDate.of(2, month0, 2);
      assertNotNull(localDate0);
      
      Driver driver0 = new Driver((String) null, (String) null, "\nData de nascimento : ", "c<s+Ou]feC", localDate0, 2, "i7yt#J+aPn");
      assertNotNull(driver0);
      assertEquals(2.0, driver0.getTimeCompliance(), 0.01);
      assertNull(driver0.getEmail());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertNull(driver0.getName());
      assertNull(driver0.getVehicle());
      assertTrue(driver0.isAvailable());
      assertEquals("\nData de nascimento : ", driver0.getPassword());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals("c<s+Ou]feC", driver0.getAddress());
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals("i7yt#J+aPn", driver0.getCompany());
      assertEquals(0, driver0.getNumberOfTrips());
      
      driver0.addRating(2);
      assertEquals(2.0, driver0.getTimeCompliance(), 0.01);
      assertNull(driver0.getEmail());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertNull(driver0.getName());
      assertNull(driver0.getVehicle());
      assertTrue(driver0.isAvailable());
      assertEquals("\nData de nascimento : ", driver0.getPassword());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals((-2), driver0.getExp());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals("c<s+Ou]feC", driver0.getAddress());
      assertEquals(1, driver0.getNumberOfReviews());
      assertEquals("i7yt#J+aPn", driver0.getCompany());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(40.0, driver0.getRating(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      assertNotNull(localDate0);
      
      Driver driver0 = new Driver((String) null, "\nEmail condutor : ", "M%%W]$^)EGB'yj", (String) null, localDate0, 0L, "N\u00E3o classificado");
      assertNotNull(driver0);
      assertEquals("M%%W]$^)EGB'yj", driver0.getPassword());
      assertNull(driver0.getEmail());
      assertNull(driver0.getAddress());
      assertEquals("N\u00E3o classificado", driver0.getCompany());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals(0.0, driver0.getTimeCompliance(), 0.01);
      assertTrue(driver0.isAvailable());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertNull(driver0.getVehicle());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals("\nEmail condutor : ", driver0.getName());
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(0, driver0.getNumberOfTrips());
      
      Point2D.Double point2D_Double0 = new Point2D.Double(0L, 2628);
      assertNotNull(point2D_Double0);
      assertEquals(0.0, point2D_Double0.x, 0.01);
      assertEquals(2628.0, point2D_Double0.y, 0.01);
      
      Trip trip0 = new Trip();
      assertNotNull(trip0);
      assertEquals(0.0, trip0.getEstimatedPrice(), 0.01);
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertNull(trip0.getLicencePlate());
      assertEquals(0.0, trip0.getPrice(), 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToDest(), 0.01);
      assertNull(trip0.getDriver());
      assertEquals(0.0, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(0, trip0.getRating());
      assertEquals(0.0, trip0.getTime(), 0.01);
      assertEquals(0, trip0.getID());
      assertNull(trip0.getClient());
      
      Point2D.Double point2D_Double1 = trip0.getEnd();
      assertNotSame(point2D_Double1, point2D_Double0);
      assertFalse(point2D_Double1.equals((Object)point2D_Double0));
      assertNotNull(point2D_Double1);
      assertEquals(0.0, trip0.getEstimatedPrice(), 0.01);
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertNull(trip0.getLicencePlate());
      assertEquals(0.0, trip0.getPrice(), 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToDest(), 0.01);
      assertNull(trip0.getDriver());
      assertEquals(0.0, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(0, trip0.getRating());
      assertEquals(0.0, trip0.getTime(), 0.01);
      assertEquals(0, trip0.getID());
      assertNull(trip0.getClient());
      assertEquals(0.0, point2D_Double1.y, 0.01);
      assertEquals(0.0, point2D_Double1.x, 0.01);
      
      Trip trip1 = new Trip(2628, point2D_Double0, point2D_Double0, (Double) 0.0, (Double) 2628.0, localDate0, "\n", "M4h~c@N4%xz7h\"", "h70$G:1g`FN>BjkS%.R", 2628, 2628, point2D_Double1, (-1508.1125272432), 2.0, 2.0);
      assertFalse(point2D_Double0.equals((Object)point2D_Double1));
      assertFalse(point2D_Double1.equals((Object)point2D_Double0));
      assertFalse(trip1.equals((Object)trip0));
      assertNotNull(trip1);
      assertEquals(0.0, trip0.getEstimatedPrice(), 0.01);
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertNull(trip0.getLicencePlate());
      assertEquals(0.0, trip0.getPrice(), 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToDest(), 0.01);
      assertNull(trip0.getDriver());
      assertEquals(0.0, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(0, trip0.getRating());
      assertEquals(0.0, trip0.getTime(), 0.01);
      assertEquals(0, trip0.getID());
      assertNull(trip0.getClient());
      assertEquals(2628, trip1.getRating());
      assertEquals(2628, trip1.getID());
      assertEquals(2.0, trip1.getRealTimeToClient(), 0.01);
      assertEquals((-1508.1125272432), trip1.getEstimatedTimeToClient(), 0.01);
      assertEquals("h70$G:1g`FN>BjkS%.R", trip1.getClient());
      assertEquals("\n", trip1.getLicencePlate());
      assertEquals(2628.0, trip1.getPrice(), 0.01);
      assertEquals("M4h~c@N4%xz7h\"", trip1.getDriver());
      assertEquals(2.0, trip1.getEstimatedPrice(), 0.01);
      assertEquals(0.0, trip1.getTime(), 0.01);
      assertEquals(2628.0, trip1.getEstimatedTimeToDest(), 0.01);
      assertEquals(0.0, point2D_Double0.x, 0.01);
      assertEquals(2628.0, point2D_Double0.y, 0.01);
      assertEquals(0.0, point2D_Double1.y, 0.01);
      assertEquals(0.0, point2D_Double1.x, 0.01);
      
      driver0.addTrip(trip1);
      assertNotSame(point2D_Double0, point2D_Double1);
      assertNotSame(trip0, trip1);
      assertNotSame(point2D_Double1, point2D_Double0);
      assertNotSame(trip1, trip0);
      assertFalse(point2D_Double0.equals((Object)point2D_Double1));
      assertFalse(trip0.equals((Object)trip1));
      assertFalse(point2D_Double1.equals((Object)point2D_Double0));
      assertFalse(trip1.equals((Object)trip0));
      assertEquals("M%%W]$^)EGB'yj", driver0.getPassword());
      assertNull(driver0.getEmail());
      assertNull(driver0.getAddress());
      assertEquals("N\u00E3o classificado", driver0.getCompany());
      assertEquals(0, driver0.getExp());
      assertEquals(0.0, driver0.getTimeCompliance(), 0.01);
      assertTrue(driver0.isAvailable());
      assertEquals(2628.0, driver0.getMoney(), 0.01);
      assertNull(driver0.getVehicle());
      assertEquals(2626.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals("\nEmail condutor : ", driver0.getName());
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(1, driver0.getNumberOfTrips());
      assertEquals(2628.0, driver0.getTotalDistance(), 0.01);
      assertEquals(0.0, trip0.getEstimatedPrice(), 0.01);
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertNull(trip0.getLicencePlate());
      assertEquals(0.0, trip0.getPrice(), 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToDest(), 0.01);
      assertNull(trip0.getDriver());
      assertEquals(0.0, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(0, trip0.getRating());
      assertEquals(0.0, trip0.getTime(), 0.01);
      assertEquals(0, trip0.getID());
      assertNull(trip0.getClient());
      assertEquals(2628, trip1.getRating());
      assertEquals(2628, trip1.getID());
      assertEquals(2.0, trip1.getRealTimeToClient(), 0.01);
      assertEquals((-1508.1125272432), trip1.getEstimatedTimeToClient(), 0.01);
      assertEquals("h70$G:1g`FN>BjkS%.R", trip1.getClient());
      assertEquals("\n", trip1.getLicencePlate());
      assertEquals(2628.0, trip1.getPrice(), 0.01);
      assertEquals("M4h~c@N4%xz7h\"", trip1.getDriver());
      assertEquals(2.0, trip1.getEstimatedPrice(), 0.01);
      assertEquals(0.0, trip1.getTime(), 0.01);
      assertEquals(2628.0, trip1.getEstimatedTimeToDest(), 0.01);
      assertEquals(0.0, point2D_Double0.x, 0.01);
      assertEquals(2628.0, point2D_Double0.y, 0.01);
      assertEquals(0.0, point2D_Double1.y, 0.01);
      assertEquals(0.0, point2D_Double1.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      Boolean boolean0 = Boolean.valueOf("0/y@k%mZqbLIN");
      assertFalse(boolean0);
      assertNotNull(boolean0);
      
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      assertNotNull(arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      Driver driver0 = new Driver("", "", "0/y@k%mZqbLIN", "", localDate0, 3043.22, 2389.379041, boolean0, 2.0, arrayList0, 1, (-3596.73), 0.0, "\nDisponibilidade : ", "", 1);
      assertNotNull(driver0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(3043.22, driver0.getTotalDistance(), 0.01);
      assertEquals(2.0, driver0.getTimeCompliance(), 0.01);
      assertEquals(1, driver0.getNumberOfReviews());
      assertEquals("", driver0.getAddress());
      assertFalse(driver0.isAvailable());
      assertEquals("", driver0.getName());
      assertEquals("\nDisponibilidade : ", driver0.getVehicle());
      assertEquals(0, driver0.getExp());
      assertEquals("", driver0.getEmail());
      assertEquals(2389.379041, driver0.getRating(), 0.01);
      assertEquals((-3596.73), driver0.getMoney(), 0.01);
      assertEquals("", driver0.getCompany());
      assertEquals(1.0, driver0.getDeviation(), 0.01);
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals("0/y@k%mZqbLIN", driver0.getPassword());
      
      driver0.setAvailability(boolean0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(3043.22, driver0.getTotalDistance(), 0.01);
      assertEquals(2.0, driver0.getTimeCompliance(), 0.01);
      assertEquals(1, driver0.getNumberOfReviews());
      assertEquals("", driver0.getAddress());
      assertFalse(driver0.isAvailable());
      assertEquals("", driver0.getName());
      assertEquals("\nDisponibilidade : ", driver0.getVehicle());
      assertEquals(0, driver0.getExp());
      assertEquals("", driver0.getEmail());
      assertEquals(2389.379041, driver0.getRating(), 0.01);
      assertEquals((-3596.73), driver0.getMoney(), 0.01);
      assertEquals("", driver0.getCompany());
      assertEquals(1.0, driver0.getDeviation(), 0.01);
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals("0/y@k%mZqbLIN", driver0.getPassword());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Period period0 = Period.ofMonths(5);
      assertNotNull(period0);
      
      IsoChronology isoChronology0 = period0.getChronology();
      assertNotNull(isoChronology0);
      
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      assertNotNull(localDate0);
      
      Boolean boolean0 = new Boolean("");
      assertFalse(boolean0);
      assertNotNull(boolean0);
      
      Driver driver0 = new Driver("Driver \n", "TbmHb/v,6}f,9", "TbmHb/v,6}f,9", "", localDate0, (-1173.81998201334), "@,cYv&.*TQ'Th");
      assertNotNull(driver0);
      assertEquals("TbmHb/v,6}f,9", driver0.getPassword());
      assertEquals("", driver0.getAddress());
      assertTrue(driver0.isAvailable());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertNull(driver0.getVehicle());
      assertEquals("TbmHb/v,6}f,9", driver0.getName());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals("Driver \n", driver0.getEmail());
      assertEquals(0, driver0.getExp());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals((-1173.81998201334), driver0.getTimeCompliance(), 0.01);
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals("@,cYv&.*TQ'Th", driver0.getCompany());
      
      ArrayList<Trip> arrayList0 = driver0.getTrips();
      assertNotNull(arrayList0);
      assertEquals("TbmHb/v,6}f,9", driver0.getPassword());
      assertEquals("", driver0.getAddress());
      assertTrue(driver0.isAvailable());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertNull(driver0.getVehicle());
      assertEquals("TbmHb/v,6}f,9", driver0.getName());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals("Driver \n", driver0.getEmail());
      assertEquals(0, driver0.getExp());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals((-1173.81998201334), driver0.getTimeCompliance(), 0.01);
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals("@,cYv&.*TQ'Th", driver0.getCompany());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      Driver driver1 = new Driver("", "+", "", "", localDate0, 0.0, (-1753.9966), boolean0, 1480.229779315, arrayList0, 1, (-3029.756909621), 3549.6, "O7Q?Mp<o}5dBG$", "+", 0.0);
      assertFalse(driver1.equals((Object)driver0));
      assertNotNull(driver1);
      assertEquals("TbmHb/v,6}f,9", driver0.getPassword());
      assertEquals("", driver0.getAddress());
      assertTrue(driver0.isAvailable());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertNull(driver0.getVehicle());
      assertEquals("TbmHb/v,6}f,9", driver0.getName());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals("Driver \n", driver0.getEmail());
      assertEquals(0, driver0.getExp());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals((-1173.81998201334), driver0.getTimeCompliance(), 0.01);
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals("@,cYv&.*TQ'Th", driver0.getCompany());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, driver1.getNumberOfTrips());
      assertEquals(0.0, driver1.getTotalDistance(), 0.01);
      assertEquals(1480.229779315, driver1.getTimeCompliance(), 0.01);
      assertEquals("+", driver1.getCompany());
      assertEquals("", driver1.getEmail());
      assertEquals(0, driver1.getExp());
      assertEquals((-1753.9966), driver1.getRating(), 0.01);
      assertEquals("", driver1.getAddress());
      assertEquals(0.0, driver1.getDeviation(), 0.01);
      assertFalse(driver1.isAvailable());
      assertEquals("O7Q?Mp<o}5dBG$", driver1.getVehicle());
      assertEquals("+", driver1.getName());
      assertEquals((-3029.756909621), driver1.getMoney(), 0.01);
      assertEquals(1, driver1.getNumberOfReviews());
      assertEquals("", driver1.getPassword());
      
      Boolean boolean1 = driver1.isAvailable();
      assertNotSame(driver0, driver1);
      assertNotSame(driver1, driver0);
      assertFalse(driver0.equals((Object)driver1));
      assertFalse(driver1.equals((Object)driver0));
      assertTrue(boolean1.equals((Object)boolean0));
      assertFalse(boolean1);
      assertNotNull(boolean1);
      assertEquals("TbmHb/v,6}f,9", driver0.getPassword());
      assertEquals("", driver0.getAddress());
      assertTrue(driver0.isAvailable());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertNull(driver0.getVehicle());
      assertEquals("TbmHb/v,6}f,9", driver0.getName());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals("Driver \n", driver0.getEmail());
      assertEquals(0, driver0.getExp());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals((-1173.81998201334), driver0.getTimeCompliance(), 0.01);
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals("@,cYv&.*TQ'Th", driver0.getCompany());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, driver1.getNumberOfTrips());
      assertEquals(0.0, driver1.getTotalDistance(), 0.01);
      assertEquals(1480.229779315, driver1.getTimeCompliance(), 0.01);
      assertEquals("+", driver1.getCompany());
      assertEquals("", driver1.getEmail());
      assertEquals(0, driver1.getExp());
      assertEquals((-1753.9966), driver1.getRating(), 0.01);
      assertEquals("", driver1.getAddress());
      assertEquals(0.0, driver1.getDeviation(), 0.01);
      assertFalse(driver1.isAvailable());
      assertEquals("O7Q?Mp<o}5dBG$", driver1.getVehicle());
      assertEquals("+", driver1.getName());
      assertEquals((-3029.756909621), driver1.getMoney(), 0.01);
      assertEquals(1, driver1.getNumberOfReviews());
      assertEquals("", driver1.getPassword());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Period period0 = Period.ofMonths(5);
      assertNotNull(period0);
      
      IsoChronology isoChronology0 = period0.getChronology();
      assertNotNull(isoChronology0);
      
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      assertNotNull(localDate0);
      
      Boolean boolean0 = new Boolean("");
      assertFalse(boolean0);
      assertNotNull(boolean0);
      
      Driver driver0 = new Driver("Driver \n", "TbmHb/v,6}f,9", "TbmHb/v,6}f,9", "", localDate0, (-1173.81998201334), "@,cYv&.*TQ'Th");
      assertNotNull(driver0);
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals("Driver \n", driver0.getEmail());
      assertEquals(0, driver0.getExp());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals("@,cYv&.*TQ'Th", driver0.getCompany());
      assertEquals((-1173.81998201334), driver0.getTimeCompliance(), 0.01);
      assertEquals("TbmHb/v,6}f,9", driver0.getPassword());
      assertEquals("", driver0.getAddress());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertNull(driver0.getVehicle());
      assertTrue(driver0.isAvailable());
      assertEquals("TbmHb/v,6}f,9", driver0.getName());
      
      ArrayList<Trip> arrayList0 = driver0.getTrips();
      assertNotNull(arrayList0);
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals("Driver \n", driver0.getEmail());
      assertEquals(0, driver0.getExp());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals("@,cYv&.*TQ'Th", driver0.getCompany());
      assertEquals((-1173.81998201334), driver0.getTimeCompliance(), 0.01);
      assertEquals("TbmHb/v,6}f,9", driver0.getPassword());
      assertEquals("", driver0.getAddress());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertNull(driver0.getVehicle());
      assertTrue(driver0.isAvailable());
      assertEquals("TbmHb/v,6}f,9", driver0.getName());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      Driver driver1 = new Driver("", "+", "", "", localDate0, 0.0, (-1753.9966), boolean0, 1480.229779315, arrayList0, 1, (-3029.756909621), 3549.6, "O7Q?Mp<o}5dBG$", "+", 0.0);
      assertFalse(driver1.equals((Object)driver0));
      assertNotNull(driver1);
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals("Driver \n", driver0.getEmail());
      assertEquals(0, driver0.getExp());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals("@,cYv&.*TQ'Th", driver0.getCompany());
      assertEquals((-1173.81998201334), driver0.getTimeCompliance(), 0.01);
      assertEquals("TbmHb/v,6}f,9", driver0.getPassword());
      assertEquals("", driver0.getAddress());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertNull(driver0.getVehicle());
      assertTrue(driver0.isAvailable());
      assertEquals("TbmHb/v,6}f,9", driver0.getName());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("+", driver1.getName());
      assertEquals(1480.229779315, driver1.getTimeCompliance(), 0.01);
      assertEquals((-3029.756909621), driver1.getMoney(), 0.01);
      assertEquals(1, driver1.getNumberOfReviews());
      assertEquals("", driver1.getPassword());
      assertEquals("O7Q?Mp<o}5dBG$", driver1.getVehicle());
      assertFalse(driver1.isAvailable());
      assertEquals(0.0, driver1.getDeviation(), 0.01);
      assertEquals("", driver1.getAddress());
      assertEquals(0, driver1.getNumberOfTrips());
      assertEquals(0, driver1.getExp());
      assertEquals(0.0, driver1.getTotalDistance(), 0.01);
      assertEquals((-1753.9966), driver1.getRating(), 0.01);
      assertEquals("+", driver1.getCompany());
      assertEquals("", driver1.getEmail());
      
      String string0 = driver1.getVehicle();
      assertNotSame(driver0, driver1);
      assertNotSame(driver1, driver0);
      assertFalse(driver0.equals((Object)driver1));
      assertFalse(driver1.equals((Object)driver0));
      assertEquals("O7Q?Mp<o}5dBG$", string0);
      assertNotNull(string0);
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals("Driver \n", driver0.getEmail());
      assertEquals(0, driver0.getExp());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals("@,cYv&.*TQ'Th", driver0.getCompany());
      assertEquals((-1173.81998201334), driver0.getTimeCompliance(), 0.01);
      assertEquals("TbmHb/v,6}f,9", driver0.getPassword());
      assertEquals("", driver0.getAddress());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertNull(driver0.getVehicle());
      assertTrue(driver0.isAvailable());
      assertEquals("TbmHb/v,6}f,9", driver0.getName());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("+", driver1.getName());
      assertEquals(1480.229779315, driver1.getTimeCompliance(), 0.01);
      assertEquals((-3029.756909621), driver1.getMoney(), 0.01);
      assertEquals(1, driver1.getNumberOfReviews());
      assertEquals("", driver1.getPassword());
      assertEquals("O7Q?Mp<o}5dBG$", driver1.getVehicle());
      assertFalse(driver1.isAvailable());
      assertEquals(0.0, driver1.getDeviation(), 0.01);
      assertEquals("", driver1.getAddress());
      assertEquals(0, driver1.getNumberOfTrips());
      assertEquals(0, driver1.getExp());
      assertEquals(0.0, driver1.getTotalDistance(), 0.01);
      assertEquals((-1753.9966), driver1.getRating(), 0.01);
      assertEquals("+", driver1.getCompany());
      assertEquals("", driver1.getEmail());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(0);
      assertNotNull(zoneOffset0);
      
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      assertNotNull(localDate0);
      
      Boolean boolean0 = new Boolean("^f'f&u");
      assertFalse(boolean0);
      assertNotNull(boolean0);
      
      Driver driver0 = new Driver("~Nl", "LU(T", "", "", localDate0, (-1128.44), "TZ0%8");
      assertNotNull(driver0);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals((-1128.44), driver0.getTimeCompliance(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals("~Nl", driver0.getEmail());
      assertEquals("TZ0%8", driver0.getCompany());
      assertEquals("", driver0.getAddress());
      assertTrue(driver0.isAvailable());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertNull(driver0.getVehicle());
      assertEquals("", driver0.getPassword());
      assertEquals("LU(T", driver0.getName());
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals(0, driver0.getNumberOfTrips());
      
      ArrayList<Trip> arrayList0 = driver0.getTrips();
      assertNotNull(arrayList0);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals((-1128.44), driver0.getTimeCompliance(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals("~Nl", driver0.getEmail());
      assertEquals("TZ0%8", driver0.getCompany());
      assertEquals("", driver0.getAddress());
      assertTrue(driver0.isAvailable());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertNull(driver0.getVehicle());
      assertEquals("", driver0.getPassword());
      assertEquals("LU(T", driver0.getName());
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals(0, driver0.getNumberOfTrips());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      Driver driver1 = new Driver("", (String) null, "~Nl", "", localDate0, 0, 0, boolean0, (-1128.44), arrayList0, 0, 419.714412, 0, "", "", (-2537.93305008222));
      assertFalse(driver1.equals((Object)driver0));
      assertNotNull(driver1);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals((-1128.44), driver0.getTimeCompliance(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals("~Nl", driver0.getEmail());
      assertEquals("TZ0%8", driver0.getCompany());
      assertEquals("", driver0.getAddress());
      assertTrue(driver0.isAvailable());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertNull(driver0.getVehicle());
      assertEquals("", driver0.getPassword());
      assertEquals("LU(T", driver0.getName());
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals(0, driver0.getNumberOfTrips());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, driver1.getNumberOfReviews());
      assertEquals(0.0, driver1.getTotalDistance(), 0.01);
      assertEquals(0, driver1.getExp());
      assertEquals(0.0, driver1.getRating(), 0.01);
      assertEquals(0, driver1.getNumberOfTrips());
      assertEquals("~Nl", driver1.getPassword());
      assertEquals("", driver1.getEmail());
      assertEquals("", driver1.getCompany());
      assertEquals((-1128.44), driver1.getTimeCompliance(), 0.01);
      assertEquals(419.714412, driver1.getMoney(), 0.01);
      assertNull(driver1.getName());
      assertFalse(driver1.isAvailable());
      assertEquals("", driver1.getAddress());
      assertEquals("", driver1.getVehicle());
      assertEquals((-2537.93305008222), driver1.getDeviation(), 0.01);
      
      String string0 = driver1.getVehicle();
      assertNotSame(driver0, driver1);
      assertNotSame(driver1, driver0);
      assertFalse(driver0.equals((Object)driver1));
      assertFalse(driver1.equals((Object)driver0));
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals((-1128.44), driver0.getTimeCompliance(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals("~Nl", driver0.getEmail());
      assertEquals("TZ0%8", driver0.getCompany());
      assertEquals("", driver0.getAddress());
      assertTrue(driver0.isAvailable());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertNull(driver0.getVehicle());
      assertEquals("", driver0.getPassword());
      assertEquals("LU(T", driver0.getName());
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals(0, driver0.getNumberOfTrips());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, driver1.getNumberOfReviews());
      assertEquals(0.0, driver1.getTotalDistance(), 0.01);
      assertEquals(0, driver1.getExp());
      assertEquals(0.0, driver1.getRating(), 0.01);
      assertEquals(0, driver1.getNumberOfTrips());
      assertEquals("~Nl", driver1.getPassword());
      assertEquals("", driver1.getEmail());
      assertEquals("", driver1.getCompany());
      assertEquals((-1128.44), driver1.getTimeCompliance(), 0.01);
      assertEquals(419.714412, driver1.getMoney(), 0.01);
      assertNull(driver1.getName());
      assertFalse(driver1.isAvailable());
      assertEquals("", driver1.getAddress());
      assertEquals("", driver1.getVehicle());
      assertEquals((-2537.93305008222), driver1.getDeviation(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      Boolean boolean0 = Boolean.valueOf(true);
      assertTrue(boolean0);
      assertNotNull(boolean0);
      
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      assertNotNull(arrayList0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      Driver driver0 = new Driver((String) null, (String) null, "Viagem de (", (String) null, localDate0, 2108.6535548, (-416.32), boolean0, (-416.32), arrayList0, (-919), 2108.6535548, (-919), "Viagem de (", "", 2108.6535548);
      assertNotNull(driver0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertTrue(driver0.isAvailable());
      assertNull(driver0.getEmail());
      assertEquals("", driver0.getCompany());
      assertEquals(2108.6535548, driver0.getTotalDistance(), 0.01);
      assertEquals("Viagem de (", driver0.getVehicle());
      assertNull(driver0.getAddress());
      assertEquals((-416.32), driver0.getTimeCompliance(), 0.01);
      assertEquals("Viagem de (", driver0.getPassword());
      assertEquals((-919), driver0.getNumberOfReviews());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(0, driver0.getExp());
      assertEquals(2108.6535548, driver0.getDeviation(), 0.01);
      assertEquals(2108.6535548, driver0.getMoney(), 0.01);
      assertEquals((-416.32), driver0.getRating(), 0.01);
      assertNull(driver0.getName());
      
      driver0.setTimeCompliance(0.0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertTrue(driver0.isAvailable());
      assertNull(driver0.getEmail());
      assertEquals(0.0, driver0.getTimeCompliance(), 0.01);
      assertEquals("", driver0.getCompany());
      assertEquals(2108.6535548, driver0.getTotalDistance(), 0.01);
      assertEquals("Viagem de (", driver0.getVehicle());
      assertNull(driver0.getAddress());
      assertEquals("Viagem de (", driver0.getPassword());
      assertEquals((-919), driver0.getNumberOfReviews());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(0, driver0.getExp());
      assertEquals(2108.6535548, driver0.getDeviation(), 0.01);
      assertEquals(2108.6535548, driver0.getMoney(), 0.01);
      assertEquals((-416.32), driver0.getRating(), 0.01);
      assertNull(driver0.getName());
      
      Double double0 = driver0.getTimeCompliance();
      assertEquals(0.0, (double)double0, 0.01);
      assertNotNull(double0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertTrue(driver0.isAvailable());
      assertNull(driver0.getEmail());
      assertEquals(0.0, driver0.getTimeCompliance(), 0.01);
      assertEquals("", driver0.getCompany());
      assertEquals(2108.6535548, driver0.getTotalDistance(), 0.01);
      assertEquals("Viagem de (", driver0.getVehicle());
      assertNull(driver0.getAddress());
      assertEquals("Viagem de (", driver0.getPassword());
      assertEquals((-919), driver0.getNumberOfReviews());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(0, driver0.getExp());
      assertEquals(2108.6535548, driver0.getDeviation(), 0.01);
      assertEquals(2108.6535548, driver0.getMoney(), 0.01);
      assertEquals((-416.32), driver0.getRating(), 0.01);
      assertNull(driver0.getName());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Period period0 = Period.ZERO;
      assertNotNull(period0);
      
      IsoChronology isoChronology0 = period0.getChronology();
      assertNotNull(isoChronology0);
      
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      assertNotNull(localDate0);
      
      Driver driver0 = new Driver("", "", "\u20AC", (String) null, localDate0, (-1617.16964), "");
      assertNotNull(driver0);
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(0, driver0.getExp());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals("\u20AC", driver0.getPassword());
      assertEquals("", driver0.getName());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals((-1617.16964), driver0.getTimeCompliance(), 0.01);
      assertEquals("", driver0.getCompany());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertNull(driver0.getAddress());
      assertEquals("", driver0.getEmail());
      assertNull(driver0.getVehicle());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertTrue(driver0.isAvailable());
      
      Double double0 = driver0.getTimeCompliance();
      assertEquals((-1617.16964), (double)double0, 0.01);
      assertNotNull(double0);
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(0, driver0.getExp());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals("\u20AC", driver0.getPassword());
      assertEquals("", driver0.getName());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals((-1617.16964), driver0.getTimeCompliance(), 0.01);
      assertEquals("", driver0.getCompany());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertNull(driver0.getAddress());
      assertEquals("", driver0.getEmail());
      assertNull(driver0.getVehicle());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertTrue(driver0.isAvailable());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(3812L);
      assertNotNull(localDate0);
      
      Driver driver0 = new Driver(";8ydYuv?U1O<", ";8ydYuv?U1O<", "", "", localDate0, 3812L, "");
      assertNotNull(driver0);
      assertEquals("", driver0.getCompany());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals(";8ydYuv?U1O<", driver0.getName());
      assertEquals("", driver0.getAddress());
      assertTrue(driver0.isAvailable());
      assertEquals(";8ydYuv?U1O<", driver0.getEmail());
      assertEquals(0, driver0.getExp());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(3812.0, driver0.getTimeCompliance(), 0.01);
      assertEquals(0, driver0.getNumberOfTrips());
      assertNull(driver0.getVehicle());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals("", driver0.getPassword());
      
      driver0.setNumberOfReviews((-1));
      assertEquals("", driver0.getCompany());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals(";8ydYuv?U1O<", driver0.getName());
      assertEquals("", driver0.getAddress());
      assertTrue(driver0.isAvailable());
      assertEquals(";8ydYuv?U1O<", driver0.getEmail());
      assertEquals(0, driver0.getExp());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(3812.0, driver0.getTimeCompliance(), 0.01);
      assertEquals(0, driver0.getNumberOfTrips());
      assertNull(driver0.getVehicle());
      assertEquals((-1), driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals("", driver0.getPassword());
      
      driver0.addRating((-2066));
      assertEquals("", driver0.getCompany());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals((-2070), driver0.getExp());
      assertEquals(";8ydYuv?U1O<", driver0.getName());
      assertEquals("", driver0.getAddress());
      assertTrue(driver0.isAvailable());
      assertEquals(";8ydYuv?U1O<", driver0.getEmail());
      assertEquals(Double.NEGATIVE_INFINITY, driver0.getRating(), 0.01);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(3812.0, driver0.getTimeCompliance(), 0.01);
      assertEquals(0, driver0.getNumberOfTrips());
      assertNull(driver0.getVehicle());
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals("", driver0.getPassword());
      
      Double double0 = driver0.getRating();
      assertEquals(Double.NEGATIVE_INFINITY, (double)double0, 0.01);
      assertNotNull(double0);
      assertEquals("", driver0.getCompany());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals((-2070), driver0.getExp());
      assertEquals(";8ydYuv?U1O<", driver0.getName());
      assertEquals("", driver0.getAddress());
      assertTrue(driver0.isAvailable());
      assertEquals(";8ydYuv?U1O<", driver0.getEmail());
      assertEquals(Double.NEGATIVE_INFINITY, driver0.getRating(), 0.01);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(3812.0, driver0.getTimeCompliance(), 0.01);
      assertEquals(0, driver0.getNumberOfTrips());
      assertNull(driver0.getVehicle());
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals("", driver0.getPassword());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Period period0 = Period.ofWeeks((-765));
      assertNotNull(period0);
      
      IsoChronology isoChronology0 = period0.getChronology();
      assertNotNull(isoChronology0);
      
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      assertNotNull(zoneOffset0);
      
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0, (ZoneId) zoneOffset0);
      assertNotNull(localDate0);
      
      Driver driver0 = new Driver("\nDura\u00E7\u00E3o real : ", "\nDura\u00E7\u00E3o real : ", "Utilizador - ", "/*g 5i:\"$h%~_i)}", localDate0, (-765), "Utilizador - ");
      assertNotNull(driver0);
      assertEquals((-765.0), driver0.getTimeCompliance(), 0.01);
      assertEquals("Utilizador - ", driver0.getPassword());
      assertEquals(0, driver0.getExp());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals("\nDura\u00E7\u00E3o real : ", driver0.getName());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertNull(driver0.getVehicle());
      assertTrue(driver0.isAvailable());
      assertEquals("/*g 5i:\"$h%~_i)}", driver0.getAddress());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals("\nDura\u00E7\u00E3o real : ", driver0.getEmail());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals("Utilizador - ", driver0.getCompany());
      
      driver0.addRating((-765));
      assertEquals((-765.0), driver0.getTimeCompliance(), 0.01);
      assertEquals((-15300.0), driver0.getRating(), 0.01);
      assertEquals("Utilizador - ", driver0.getPassword());
      assertEquals((-769), driver0.getExp());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals("\nDura\u00E7\u00E3o real : ", driver0.getName());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertNull(driver0.getVehicle());
      assertTrue(driver0.isAvailable());
      assertEquals("/*g 5i:\"$h%~_i)}", driver0.getAddress());
      assertEquals(1, driver0.getNumberOfReviews());
      assertEquals("\nDura\u00E7\u00E3o real : ", driver0.getEmail());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals("Utilizador - ", driver0.getCompany());
      
      Double double0 = driver0.getRating();
      assertEquals((-15300.0), (double)double0, 0.01);
      assertNotNull(double0);
      assertEquals((-765.0), driver0.getTimeCompliance(), 0.01);
      assertEquals((-15300.0), driver0.getRating(), 0.01);
      assertEquals("Utilizador - ", driver0.getPassword());
      assertEquals((-769), driver0.getExp());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals("\nDura\u00E7\u00E3o real : ", driver0.getName());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertNull(driver0.getVehicle());
      assertTrue(driver0.isAvailable());
      assertEquals("/*g 5i:\"$h%~_i)}", driver0.getAddress());
      assertEquals(1, driver0.getNumberOfReviews());
      assertEquals("\nDura\u00E7\u00E3o real : ", driver0.getEmail());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals("Utilizador - ", driver0.getCompany());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      Boolean boolean0 = new Boolean("Icf(Xv[ns");
      assertFalse(boolean0);
      assertNotNull(boolean0);
      
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      assertNotNull(arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      Driver driver0 = new Driver("Icf(Xv[ns", "Icf(Xv[ns", "Icf(Xv[ns", "Icf(Xv[ns", localDate0, 0.0, 2203.9, boolean0, 2203.9, arrayList0, 2476, (-1.0), 0.0, "Icf(Xv[ns", "j", 2476);
      assertNotNull(driver0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals("Icf(Xv[ns", driver0.getEmail());
      assertEquals(0, driver0.getExp());
      assertEquals(2203.9, driver0.getTimeCompliance(), 0.01);
      assertEquals(2476, driver0.getNumberOfReviews());
      assertEquals("j", driver0.getCompany());
      assertEquals("Icf(Xv[ns", driver0.getPassword());
      assertEquals("Icf(Xv[ns", driver0.getAddress());
      assertEquals(2476.0, driver0.getDeviation(), 0.01);
      assertFalse(driver0.isAvailable());
      assertEquals("Icf(Xv[ns", driver0.getVehicle());
      assertEquals(2203.9, driver0.getRating(), 0.01);
      assertEquals("Icf(Xv[ns", driver0.getName());
      assertEquals((-1.0), driver0.getMoney(), 0.01);
      
      Double double0 = driver0.getRating();
      assertEquals(2203.9, (double)double0, 0.01);
      assertNotNull(double0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals("Icf(Xv[ns", driver0.getEmail());
      assertEquals(0, driver0.getExp());
      assertEquals(2203.9, driver0.getTimeCompliance(), 0.01);
      assertEquals(2476, driver0.getNumberOfReviews());
      assertEquals("j", driver0.getCompany());
      assertEquals("Icf(Xv[ns", driver0.getPassword());
      assertEquals("Icf(Xv[ns", driver0.getAddress());
      assertEquals(2476.0, driver0.getDeviation(), 0.01);
      assertFalse(driver0.isAvailable());
      assertEquals("Icf(Xv[ns", driver0.getVehicle());
      assertEquals(2203.9, driver0.getRating(), 0.01);
      assertEquals("Icf(Xv[ns", driver0.getName());
      assertEquals((-1.0), driver0.getMoney(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      Driver driver0 = new Driver((String) null, "t=b+fMME[;P42No2", "I8>5OEYEi1", "I8>5OEYEi1", localDate0, 80.22556505, (String) null);
      assertNotNull(driver0);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals(0, driver0.getNumberOfTrips());
      assertTrue(driver0.isAvailable());
      assertNull(driver0.getVehicle());
      assertEquals("I8>5OEYEi1", driver0.getAddress());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals("I8>5OEYEi1", driver0.getPassword());
      assertEquals("t=b+fMME[;P42No2", driver0.getName());
      assertNull(driver0.getCompany());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertNull(driver0.getEmail());
      assertEquals(80.22556505, driver0.getTimeCompliance(), 0.01);
      
      int int0 = driver0.getNumberOfReviews();
      assertEquals(0, int0);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals(0, driver0.getNumberOfTrips());
      assertTrue(driver0.isAvailable());
      assertNull(driver0.getVehicle());
      assertEquals("I8>5OEYEi1", driver0.getAddress());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals("I8>5OEYEi1", driver0.getPassword());
      assertEquals("t=b+fMME[;P42No2", driver0.getName());
      assertNull(driver0.getCompany());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertNull(driver0.getEmail());
      assertEquals(80.22556505, driver0.getTimeCompliance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      Boolean boolean0 = Boolean.valueOf(true);
      assertTrue(boolean0);
      assertNotNull(boolean0);
      
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      assertNotNull(arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      Driver driver0 = new Driver((String) null, (String) null, "Viagem de (", (String) null, localDate0, 2108.6535548, (-416.32), boolean0, (-416.32), arrayList0, (-919), 2108.6535548, (-919), "Viagem de (", "", 2108.6535548);
      assertNotNull(driver0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals((-919), driver0.getNumberOfReviews());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(2108.6535548, driver0.getDeviation(), 0.01);
      assertEquals(2108.6535548, driver0.getMoney(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals("Viagem de (", driver0.getVehicle());
      assertEquals((-416.32), driver0.getRating(), 0.01);
      assertNull(driver0.getName());
      assertNull(driver0.getEmail());
      assertEquals("Viagem de (", driver0.getPassword());
      assertTrue(driver0.isAvailable());
      assertEquals("", driver0.getCompany());
      assertEquals(2108.6535548, driver0.getTotalDistance(), 0.01);
      assertEquals((-416.32), driver0.getTimeCompliance(), 0.01);
      assertNull(driver0.getAddress());
      
      int int0 = driver0.getNumberOfReviews();
      assertEquals((-919), int0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals((-919), driver0.getNumberOfReviews());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(2108.6535548, driver0.getDeviation(), 0.01);
      assertEquals(2108.6535548, driver0.getMoney(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals("Viagem de (", driver0.getVehicle());
      assertEquals((-416.32), driver0.getRating(), 0.01);
      assertNull(driver0.getName());
      assertNull(driver0.getEmail());
      assertEquals("Viagem de (", driver0.getPassword());
      assertTrue(driver0.isAvailable());
      assertEquals("", driver0.getCompany());
      assertEquals(2108.6535548, driver0.getTotalDistance(), 0.01);
      assertEquals((-416.32), driver0.getTimeCompliance(), 0.01);
      assertNull(driver0.getAddress());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      Boolean boolean0 = Boolean.valueOf("0/y@k%mZqbLIN");
      assertFalse(boolean0);
      assertNotNull(boolean0);
      
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      assertNotNull(arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      Driver driver0 = new Driver("", "", "0/y@k%mZqbLIN", "", localDate0, 3043.22, 2389.379041, boolean0, 2.0, arrayList0, 1, (-3596.73), 0.0, "\nDisponibilidade : ", "", 1);
      assertNotNull(driver0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1.0, driver0.getDeviation(), 0.01);
      assertEquals(2389.379041, driver0.getRating(), 0.01);
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals("", driver0.getName());
      assertEquals(3043.22, driver0.getTotalDistance(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals("", driver0.getEmail());
      assertEquals("", driver0.getCompany());
      assertEquals(2.0, driver0.getTimeCompliance(), 0.01);
      assertEquals("", driver0.getAddress());
      assertEquals((-3596.73), driver0.getMoney(), 0.01);
      assertEquals("\nDisponibilidade : ", driver0.getVehicle());
      assertEquals("0/y@k%mZqbLIN", driver0.getPassword());
      assertFalse(driver0.isAvailable());
      assertEquals(1, driver0.getNumberOfReviews());
      
      driver0.addRating(61);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1.0, driver0.getDeviation(), 0.01);
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals("", driver0.getName());
      assertEquals(36, driver0.getExp());
      assertEquals(3043.22, driver0.getTotalDistance(), 0.01);
      assertEquals("", driver0.getEmail());
      assertEquals("", driver0.getCompany());
      assertEquals(2.0, driver0.getTimeCompliance(), 0.01);
      assertEquals("", driver0.getAddress());
      assertEquals((-3596.73), driver0.getMoney(), 0.01);
      assertEquals("\nDisponibilidade : ", driver0.getVehicle());
      assertEquals("0/y@k%mZqbLIN", driver0.getPassword());
      assertFalse(driver0.isAvailable());
      assertEquals(2, driver0.getNumberOfReviews());
      assertEquals(1804.6895205, driver0.getRating(), 0.01);
      
      int int0 = driver0.getExp();
      assertEquals(36, int0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1.0, driver0.getDeviation(), 0.01);
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals("", driver0.getName());
      assertEquals(36, driver0.getExp());
      assertEquals(3043.22, driver0.getTotalDistance(), 0.01);
      assertEquals("", driver0.getEmail());
      assertEquals("", driver0.getCompany());
      assertEquals(2.0, driver0.getTimeCompliance(), 0.01);
      assertEquals("", driver0.getAddress());
      assertEquals((-3596.73), driver0.getMoney(), 0.01);
      assertEquals("\nDisponibilidade : ", driver0.getVehicle());
      assertEquals("0/y@k%mZqbLIN", driver0.getPassword());
      assertFalse(driver0.isAvailable());
      assertEquals(2, driver0.getNumberOfReviews());
      assertEquals(1804.6895205, driver0.getRating(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      Boolean boolean0 = Boolean.valueOf(true);
      assertTrue(boolean0);
      assertNotNull(boolean0);
      
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      assertNotNull(arrayList0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      Driver driver0 = new Driver((String) null, (String) null, "Viagem de (", (String) null, localDate0, 2108.6535548, (-416.32), boolean0, (-416.32), arrayList0, (-919), 2108.6535548, (-919), "Viagem de (", "", 2108.6535548);
      assertNotNull(driver0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(driver0.getAddress());
      assertNull(driver0.getEmail());
      assertTrue(driver0.isAvailable());
      assertEquals("Viagem de (", driver0.getVehicle());
      assertEquals((-919), driver0.getNumberOfReviews());
      assertEquals(0, driver0.getExp());
      assertEquals(2108.6535548, driver0.getDeviation(), 0.01);
      assertEquals(2108.6535548, driver0.getMoney(), 0.01);
      assertEquals((-416.32), driver0.getTimeCompliance(), 0.01);
      assertNull(driver0.getName());
      assertEquals((-416.32), driver0.getRating(), 0.01);
      assertEquals(2108.6535548, driver0.getTotalDistance(), 0.01);
      assertEquals("Viagem de (", driver0.getPassword());
      assertEquals("", driver0.getCompany());
      assertEquals(0, driver0.getNumberOfTrips());
      
      driver0.addRating((-919));
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(driver0.getAddress());
      assertNull(driver0.getEmail());
      assertEquals((-923), driver0.getExp());
      assertTrue(driver0.isAvailable());
      assertEquals("Viagem de (", driver0.getVehicle());
      assertEquals(2108.6535548, driver0.getDeviation(), 0.01);
      assertEquals(2108.6535548, driver0.getMoney(), 0.01);
      assertEquals((-918), driver0.getNumberOfReviews());
      assertEquals((-416.32), driver0.getTimeCompliance(), 0.01);
      assertNull(driver0.getName());
      assertEquals(2108.6535548, driver0.getTotalDistance(), 0.01);
      assertEquals("Viagem de (", driver0.getPassword());
      assertEquals("", driver0.getCompany());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals((-396.7517211328976), driver0.getRating(), 0.01);
      
      int int0 = driver0.getExp();
      assertEquals((-923), int0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(driver0.getAddress());
      assertNull(driver0.getEmail());
      assertEquals((-923), driver0.getExp());
      assertTrue(driver0.isAvailable());
      assertEquals("Viagem de (", driver0.getVehicle());
      assertEquals(2108.6535548, driver0.getDeviation(), 0.01);
      assertEquals(2108.6535548, driver0.getMoney(), 0.01);
      assertEquals((-918), driver0.getNumberOfReviews());
      assertEquals((-416.32), driver0.getTimeCompliance(), 0.01);
      assertNull(driver0.getName());
      assertEquals(2108.6535548, driver0.getTotalDistance(), 0.01);
      assertEquals("Viagem de (", driver0.getPassword());
      assertEquals("", driver0.getCompany());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals((-396.7517211328976), driver0.getRating(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      Boolean boolean0 = Boolean.valueOf(true);
      assertTrue(boolean0);
      assertNotNull(boolean0);
      
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      assertNotNull(arrayList0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      Driver driver0 = new Driver((String) null, (String) null, "Viagem de (", (String) null, localDate0, 2108.6535548, (-416.32), boolean0, (-416.32), arrayList0, (-919), 2108.6535548, (-919), "Viagem de (", "", 2108.6535548);
      assertNotNull(driver0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-416.32), driver0.getRating(), 0.01);
      assertNull(driver0.getName());
      assertEquals(2108.6535548, driver0.getMoney(), 0.01);
      assertNull(driver0.getEmail());
      assertTrue(driver0.isAvailable());
      assertEquals(0, driver0.getExp());
      assertEquals(2108.6535548, driver0.getDeviation(), 0.01);
      assertEquals((-416.32), driver0.getTimeCompliance(), 0.01);
      assertNull(driver0.getAddress());
      assertEquals("", driver0.getCompany());
      assertEquals((-919), driver0.getNumberOfReviews());
      assertEquals("Viagem de (", driver0.getVehicle());
      assertEquals("Viagem de (", driver0.getPassword());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(2108.6535548, driver0.getTotalDistance(), 0.01);
      
      double double0 = driver0.getDeviation();
      assertEquals(2108.6535548, double0, 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-416.32), driver0.getRating(), 0.01);
      assertNull(driver0.getName());
      assertEquals(2108.6535548, driver0.getMoney(), 0.01);
      assertNull(driver0.getEmail());
      assertTrue(driver0.isAvailable());
      assertEquals(0, driver0.getExp());
      assertEquals(2108.6535548, driver0.getDeviation(), 0.01);
      assertEquals((-416.32), driver0.getTimeCompliance(), 0.01);
      assertNull(driver0.getAddress());
      assertEquals("", driver0.getCompany());
      assertEquals((-919), driver0.getNumberOfReviews());
      assertEquals("Viagem de (", driver0.getVehicle());
      assertEquals("Viagem de (", driver0.getPassword());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(2108.6535548, driver0.getTotalDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-255L));
      assertNotNull(localDate0);
      
      Boolean boolean0 = new Boolean(false);
      assertFalse(boolean0);
      assertNotNull(boolean0);
      
      Driver driver0 = new Driver("", "", "", "Y^QQQl=P5R]", localDate0, 1245.05369324, "");
      assertNotNull(driver0);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals(0, driver0.getNumberOfTrips());
      assertNull(driver0.getVehicle());
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals("", driver0.getPassword());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals("", driver0.getCompany());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertTrue(driver0.isAvailable());
      assertEquals("Y^QQQl=P5R]", driver0.getAddress());
      assertEquals("", driver0.getName());
      assertEquals("", driver0.getEmail());
      assertEquals(1245.05369324, driver0.getTimeCompliance(), 0.01);
      
      ArrayList<Trip> arrayList0 = driver0.getTrips();
      assertNotNull(arrayList0);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals(0, driver0.getNumberOfTrips());
      assertNull(driver0.getVehicle());
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals("", driver0.getPassword());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals("", driver0.getCompany());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertTrue(driver0.isAvailable());
      assertEquals("Y^QQQl=P5R]", driver0.getAddress());
      assertEquals("", driver0.getName());
      assertEquals("", driver0.getEmail());
      assertEquals(1245.05369324, driver0.getTimeCompliance(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      Driver driver1 = new Driver("", "", "Y^QQQl=P5R]", "Y^QQQl=P5R]", localDate0, (-255L), 0.0, boolean0, 1245.05369324, arrayList0, (-372), 683.03220062, (-18.0), "2Kx=XS", "", (-474.828389));
      assertFalse(driver1.equals((Object)driver0));
      assertNotNull(driver1);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals(0, driver0.getNumberOfTrips());
      assertNull(driver0.getVehicle());
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals("", driver0.getPassword());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals("", driver0.getCompany());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertTrue(driver0.isAvailable());
      assertEquals("Y^QQQl=P5R]", driver0.getAddress());
      assertEquals("", driver0.getName());
      assertEquals("", driver0.getEmail());
      assertEquals(1245.05369324, driver0.getTimeCompliance(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", driver1.getName());
      assertEquals("", driver1.getEmail());
      assertEquals((-372), driver1.getNumberOfReviews());
      assertEquals((-474.828389), driver1.getDeviation(), 0.01);
      assertFalse(driver1.isAvailable());
      assertEquals(0, driver1.getExp());
      assertEquals("Y^QQQl=P5R]", driver1.getPassword());
      assertEquals(0.0, driver1.getRating(), 0.01);
      assertEquals("Y^QQQl=P5R]", driver1.getAddress());
      assertEquals(1245.05369324, driver1.getTimeCompliance(), 0.01);
      assertEquals(683.03220062, driver1.getMoney(), 0.01);
      assertEquals("2Kx=XS", driver1.getVehicle());
      assertEquals((-255.0), driver1.getTotalDistance(), 0.01);
      assertEquals("", driver1.getCompany());
      assertEquals(0, driver1.getNumberOfTrips());
      
      double double0 = driver1.getDeviation();
      assertNotSame(driver0, driver1);
      assertNotSame(driver1, driver0);
      assertFalse(driver0.equals((Object)driver1));
      assertFalse(driver1.equals((Object)driver0));
      assertEquals((-474.828389), double0, 0.01);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals(0, driver0.getNumberOfTrips());
      assertNull(driver0.getVehicle());
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals("", driver0.getPassword());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals("", driver0.getCompany());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertTrue(driver0.isAvailable());
      assertEquals("Y^QQQl=P5R]", driver0.getAddress());
      assertEquals("", driver0.getName());
      assertEquals("", driver0.getEmail());
      assertEquals(1245.05369324, driver0.getTimeCompliance(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", driver1.getName());
      assertEquals("", driver1.getEmail());
      assertEquals((-372), driver1.getNumberOfReviews());
      assertEquals((-474.828389), driver1.getDeviation(), 0.01);
      assertFalse(driver1.isAvailable());
      assertEquals(0, driver1.getExp());
      assertEquals("Y^QQQl=P5R]", driver1.getPassword());
      assertEquals(0.0, driver1.getRating(), 0.01);
      assertEquals("Y^QQQl=P5R]", driver1.getAddress());
      assertEquals(1245.05369324, driver1.getTimeCompliance(), 0.01);
      assertEquals(683.03220062, driver1.getMoney(), 0.01);
      assertEquals("2Kx=XS", driver1.getVehicle());
      assertEquals((-255.0), driver1.getTotalDistance(), 0.01);
      assertEquals("", driver1.getCompany());
      assertEquals(0, driver1.getNumberOfTrips());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Month month0 = Month.AUGUST;
      LocalDate localDate0 = MockLocalDate.of(2, month0, 2);
      assertNotNull(localDate0);
      
      Driver driver0 = new Driver((String) null, (String) null, "\nData de nascimento : ", "c<s+Ou]feC", localDate0, 2, "i7yt#J+aPn");
      assertNotNull(driver0);
      assertNull(driver0.getName());
      assertEquals("c<s+Ou]feC", driver0.getAddress());
      assertEquals(0, driver0.getExp());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertNull(driver0.getEmail());
      assertEquals(2.0, driver0.getTimeCompliance(), 0.01);
      assertNull(driver0.getVehicle());
      assertEquals("\nData de nascimento : ", driver0.getPassword());
      assertTrue(driver0.isAvailable());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals("i7yt#J+aPn", driver0.getCompany());
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals(0, driver0.getNumberOfTrips());
      
      String string0 = driver0.getCompany();
      assertEquals("i7yt#J+aPn", string0);
      assertNotNull(string0);
      assertNull(driver0.getName());
      assertEquals("c<s+Ou]feC", driver0.getAddress());
      assertEquals(0, driver0.getExp());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertNull(driver0.getEmail());
      assertEquals(2.0, driver0.getTimeCompliance(), 0.01);
      assertNull(driver0.getVehicle());
      assertEquals("\nData de nascimento : ", driver0.getPassword());
      assertTrue(driver0.isAvailable());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals("i7yt#J+aPn", driver0.getCompany());
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals(0, driver0.getNumberOfTrips());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofYearDay((-1577), 3);
      assertNotNull(localDate0);
      
      Boolean boolean0 = new Boolean(false);
      assertFalse(boolean0);
      assertNotNull(boolean0);
      
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      assertNotNull(arrayList0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      Driver driver0 = new Driver("", "", "", "vppum_", localDate0, (-1577), 0.0, boolean0, 0.0, arrayList0, 3, 0.0, 3, "", "", (-1577));
      assertNotNull(driver0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", driver0.getEmail());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals("", driver0.getCompany());
      assertEquals("", driver0.getName());
      assertEquals(0.0, driver0.getTimeCompliance(), 0.01);
      assertEquals((-1577.0), driver0.getDeviation(), 0.01);
      assertFalse(driver0.isAvailable());
      assertEquals("", driver0.getVehicle());
      assertEquals(3, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals((-1577.0), driver0.getTotalDistance(), 0.01);
      assertEquals("", driver0.getPassword());
      assertEquals(0, driver0.getExp());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals("vppum_", driver0.getAddress());
      
      String string0 = driver0.getCompany();
      assertEquals("", string0);
      assertNotNull(string0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", driver0.getEmail());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals("", driver0.getCompany());
      assertEquals("", driver0.getName());
      assertEquals(0.0, driver0.getTimeCompliance(), 0.01);
      assertEquals((-1577.0), driver0.getDeviation(), 0.01);
      assertFalse(driver0.isAvailable());
      assertEquals("", driver0.getVehicle());
      assertEquals(3, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals((-1577.0), driver0.getTotalDistance(), 0.01);
      assertEquals("", driver0.getPassword());
      assertEquals(0, driver0.getExp());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals("vppum_", driver0.getAddress());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofYearDay(269, 269);
      assertNotNull(localDate0);
      
      Driver driver0 = new Driver("/WQ Q?(wa6", "/WQ Q?(wa6", "/WQ Q?(wa6", "/WQ Q?(wa6", localDate0, 269, "/WQ Q?(wa6");
      assertNotNull(driver0);
      assertEquals("/WQ Q?(wa6", driver0.getCompany());
      assertEquals("/WQ Q?(wa6", driver0.getAddress());
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals("/WQ Q?(wa6", driver0.getEmail());
      assertEquals(0, driver0.getExp());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals("/WQ Q?(wa6", driver0.getName());
      assertNull(driver0.getVehicle());
      assertTrue(driver0.isAvailable());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals("/WQ Q?(wa6", driver0.getPassword());
      assertEquals(269.0, driver0.getTimeCompliance(), 0.01);
      
      boolean boolean0 = driver0.equals(driver0);
      assertTrue(boolean0);
      assertEquals("/WQ Q?(wa6", driver0.getCompany());
      assertEquals("/WQ Q?(wa6", driver0.getAddress());
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals("/WQ Q?(wa6", driver0.getEmail());
      assertEquals(0, driver0.getExp());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals("/WQ Q?(wa6", driver0.getName());
      assertNull(driver0.getVehicle());
      assertTrue(driver0.isAvailable());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals("/WQ Q?(wa6", driver0.getPassword());
      assertEquals(269.0, driver0.getTimeCompliance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(0);
      assertNotNull(zoneOffset0);
      
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      assertNotNull(localDate0);
      
      Boolean boolean0 = new Boolean("^f'f&u");
      assertFalse(boolean0);
      assertNotNull(boolean0);
      
      Driver driver0 = new Driver("~Nl", "LU(T", "", "", localDate0, (-1128.44), "TZ0%8");
      assertNotNull(driver0);
      assertEquals((-1128.44), driver0.getTimeCompliance(), 0.01);
      assertTrue(driver0.isAvailable());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals("", driver0.getAddress());
      assertEquals("TZ0%8", driver0.getCompany());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertNull(driver0.getVehicle());
      assertEquals("", driver0.getPassword());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals("~Nl", driver0.getEmail());
      assertEquals("LU(T", driver0.getName());
      
      ArrayList<Trip> arrayList0 = driver0.getTrips();
      assertNotNull(arrayList0);
      assertEquals((-1128.44), driver0.getTimeCompliance(), 0.01);
      assertTrue(driver0.isAvailable());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals("", driver0.getAddress());
      assertEquals("TZ0%8", driver0.getCompany());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertNull(driver0.getVehicle());
      assertEquals("", driver0.getPassword());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals("~Nl", driver0.getEmail());
      assertEquals("LU(T", driver0.getName());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      Driver driver1 = new Driver("", (String) null, "~Nl", "", localDate0, 0, 0, boolean0, (-1128.44), arrayList0, 0, 419.714412, 0, "", "", (-2537.93305008222));
      assertFalse(driver1.equals((Object)driver0));
      assertNotNull(driver1);
      assertEquals((-1128.44), driver0.getTimeCompliance(), 0.01);
      assertTrue(driver0.isAvailable());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals("", driver0.getAddress());
      assertEquals("TZ0%8", driver0.getCompany());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertNull(driver0.getVehicle());
      assertEquals("", driver0.getPassword());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals("~Nl", driver0.getEmail());
      assertEquals("LU(T", driver0.getName());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-1128.44), driver1.getTimeCompliance(), 0.01);
      assertEquals("~Nl", driver1.getPassword());
      assertEquals("", driver1.getCompany());
      assertEquals(0, driver1.getExp());
      assertEquals(0.0, driver1.getTotalDistance(), 0.01);
      assertNull(driver1.getName());
      assertEquals("", driver1.getEmail());
      assertEquals(0.0, driver1.getRating(), 0.01);
      assertEquals("", driver1.getVehicle());
      assertEquals(0, driver1.getNumberOfTrips());
      assertFalse(driver1.isAvailable());
      assertEquals((-2537.93305008222), driver1.getDeviation(), 0.01);
      assertEquals("", driver1.getAddress());
      assertEquals(0, driver1.getNumberOfReviews());
      assertEquals(419.714412, driver1.getMoney(), 0.01);
      
      boolean boolean1 = driver1.equals(driver0);
      assertNotSame(driver0, driver1);
      assertNotSame(driver1, driver0);
      assertFalse(driver0.equals((Object)driver1));
      assertFalse(driver1.equals((Object)driver0));
      assertFalse(boolean1);
      assertEquals((-1128.44), driver0.getTimeCompliance(), 0.01);
      assertTrue(driver0.isAvailable());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals("", driver0.getAddress());
      assertEquals("TZ0%8", driver0.getCompany());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertNull(driver0.getVehicle());
      assertEquals("", driver0.getPassword());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals("~Nl", driver0.getEmail());
      assertEquals("LU(T", driver0.getName());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-1128.44), driver1.getTimeCompliance(), 0.01);
      assertEquals("~Nl", driver1.getPassword());
      assertEquals("", driver1.getCompany());
      assertEquals(0, driver1.getExp());
      assertEquals(0.0, driver1.getTotalDistance(), 0.01);
      assertNull(driver1.getName());
      assertEquals("", driver1.getEmail());
      assertEquals(0.0, driver1.getRating(), 0.01);
      assertEquals("", driver1.getVehicle());
      assertEquals(0, driver1.getNumberOfTrips());
      assertFalse(driver1.isAvailable());
      assertEquals((-2537.93305008222), driver1.getDeviation(), 0.01);
      assertEquals("", driver1.getAddress());
      assertEquals(0, driver1.getNumberOfReviews());
      assertEquals(419.714412, driver1.getMoney(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      assertNotNull(localDate0);
      
      Driver driver0 = new Driver(";8ydYuv?W1O<", ";8ydYuv?W1O<", ";8ydYuv?W1O<", ";8ydYuv?W1O<", localDate0, 0L, ";8ydYuv?W1O<");
      assertNotNull(driver0);
      assertEquals(";8ydYuv?W1O<", driver0.getEmail());
      assertEquals(0.0, driver0.getTimeCompliance(), 0.01);
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals(";8ydYuv?W1O<", driver0.getAddress());
      assertEquals(";8ydYuv?W1O<", driver0.getCompany());
      assertEquals(";8ydYuv?W1O<", driver0.getName());
      assertTrue(driver0.isAvailable());
      assertNull(driver0.getVehicle());
      assertEquals(0, driver0.getExp());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(";8ydYuv?W1O<", driver0.getPassword());
      assertEquals(0, driver0.getNumberOfTrips());
      
      driver0.setNumberOfReviews((-2066));
      assertEquals(";8ydYuv?W1O<", driver0.getEmail());
      assertEquals(0.0, driver0.getTimeCompliance(), 0.01);
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals(";8ydYuv?W1O<", driver0.getAddress());
      assertEquals(";8ydYuv?W1O<", driver0.getCompany());
      assertEquals(";8ydYuv?W1O<", driver0.getName());
      assertTrue(driver0.isAvailable());
      assertNull(driver0.getVehicle());
      assertEquals(0, driver0.getExp());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals((-2066), driver0.getNumberOfReviews());
      assertEquals(";8ydYuv?W1O<", driver0.getPassword());
      assertEquals(0, driver0.getNumberOfTrips());
      
      Driver driver1 = driver0.clone();
      assertNotSame(driver0, driver1);
      assertNotSame(driver1, driver0);
      assertFalse(driver1.equals((Object)driver0));
      assertNotNull(driver1);
      assertEquals(";8ydYuv?W1O<", driver0.getEmail());
      assertEquals(0.0, driver0.getTimeCompliance(), 0.01);
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals(";8ydYuv?W1O<", driver0.getAddress());
      assertEquals(";8ydYuv?W1O<", driver0.getCompany());
      assertEquals(";8ydYuv?W1O<", driver0.getName());
      assertTrue(driver0.isAvailable());
      assertNull(driver0.getVehicle());
      assertEquals(0, driver0.getExp());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals((-2066), driver0.getNumberOfReviews());
      assertEquals(";8ydYuv?W1O<", driver0.getPassword());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(0.0, driver1.getTotalDistance(), 0.01);
      assertEquals(0, driver1.getExp());
      assertEquals((-2066), driver1.getNumberOfReviews());
      assertEquals(0.0, driver1.getRating(), 0.01);
      assertEquals(";8ydYuv?W1O<", driver1.getPassword());
      assertEquals(0, driver1.getNumberOfTrips());
      assertEquals(";8ydYuv?W1O<", driver1.getAddress());
      assertEquals(";8ydYuv?W1O<", driver1.getCompany());
      assertEquals(0.0, driver1.getTimeCompliance(), 0.01);
      assertEquals(0.0, driver1.getDeviation(), 0.01);
      assertNull(driver1.getVehicle());
      assertTrue(driver1.isAvailable());
      assertEquals(";8ydYuv?W1O<", driver1.getName());
      assertEquals(";8ydYuv?W1O<", driver1.getEmail());
      assertEquals(0.0, driver1.getMoney(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      Boolean boolean0 = Boolean.TRUE;
      assertTrue(boolean0);
      assertNotNull(boolean0);
      
      Driver driver0 = new Driver("\nDisponibilidade : ", "", "Ou:", "", localDate0, 60.0, "");
      assertNotNull(driver0);
      assertEquals("", driver0.getAddress());
      assertEquals("Ou:", driver0.getPassword());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals("", driver0.getCompany());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(60.0, driver0.getTimeCompliance(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals("", driver0.getName());
      assertEquals("\nDisponibilidade : ", driver0.getEmail());
      assertNull(driver0.getVehicle());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertTrue(driver0.isAvailable());
      
      ArrayList<Trip> arrayList0 = driver0.getTrips();
      assertNotNull(arrayList0);
      assertEquals("", driver0.getAddress());
      assertEquals("Ou:", driver0.getPassword());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals("", driver0.getCompany());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(60.0, driver0.getTimeCompliance(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals("", driver0.getName());
      assertEquals("\nDisponibilidade : ", driver0.getEmail());
      assertNull(driver0.getVehicle());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertTrue(driver0.isAvailable());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      Driver driver1 = new Driver("Ou:", (String) null, "Ou:", "\nDisponibilidade : ", localDate0, 60.0, (-1007.378834941), boolean0, 60.0, arrayList0, 6578, 6578, (-1007.378834941), "", "uMer.Driver", 60.0);
      assertFalse(driver1.equals((Object)driver0));
      assertNotNull(driver1);
      assertEquals("", driver0.getAddress());
      assertEquals("Ou:", driver0.getPassword());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals("", driver0.getCompany());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(60.0, driver0.getTimeCompliance(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals("", driver0.getName());
      assertEquals("\nDisponibilidade : ", driver0.getEmail());
      assertNull(driver0.getVehicle());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertTrue(driver0.isAvailable());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("uMer.Driver", driver1.getCompany());
      assertEquals(6578, driver1.getNumberOfReviews());
      assertEquals(60.0, driver1.getTotalDistance(), 0.01);
      assertEquals("Ou:", driver1.getPassword());
      assertEquals("", driver1.getVehicle());
      assertEquals("\nDisponibilidade : ", driver1.getAddress());
      assertTrue(driver1.isAvailable());
      assertEquals(6578.0, driver1.getMoney(), 0.01);
      assertEquals(0, driver1.getNumberOfTrips());
      assertEquals(60.0, driver1.getTimeCompliance(), 0.01);
      assertEquals((-1007.378834941), driver1.getRating(), 0.01);
      assertEquals(0, driver1.getExp());
      assertEquals(60.0, driver1.getDeviation(), 0.01);
      assertEquals("Ou:", driver1.getEmail());
      assertNull(driver1.getName());
      
      Driver driver2 = driver1.clone();
      assertNotSame(driver0, driver2);
      assertNotSame(driver0, driver1);
      assertNotSame(driver1, driver2);
      assertNotSame(driver1, driver0);
      assertNotSame(driver2, driver0);
      assertNotSame(driver2, driver1);
      assertFalse(driver0.equals((Object)driver1));
      assertFalse(driver1.equals((Object)driver0));
      assertFalse(driver2.equals((Object)driver0));
      assertFalse(driver2.equals((Object)driver1));
      assertNotNull(driver2);
      assertEquals("", driver0.getAddress());
      assertEquals("Ou:", driver0.getPassword());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals("", driver0.getCompany());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(60.0, driver0.getTimeCompliance(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals("", driver0.getName());
      assertEquals("\nDisponibilidade : ", driver0.getEmail());
      assertNull(driver0.getVehicle());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertTrue(driver0.isAvailable());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("uMer.Driver", driver1.getCompany());
      assertEquals(6578, driver1.getNumberOfReviews());
      assertEquals(60.0, driver1.getTotalDistance(), 0.01);
      assertEquals("Ou:", driver1.getPassword());
      assertEquals("", driver1.getVehicle());
      assertEquals("\nDisponibilidade : ", driver1.getAddress());
      assertTrue(driver1.isAvailable());
      assertEquals(6578.0, driver1.getMoney(), 0.01);
      assertEquals(0, driver1.getNumberOfTrips());
      assertEquals(60.0, driver1.getTimeCompliance(), 0.01);
      assertEquals((-1007.378834941), driver1.getRating(), 0.01);
      assertEquals(0, driver1.getExp());
      assertEquals(60.0, driver1.getDeviation(), 0.01);
      assertEquals("Ou:", driver1.getEmail());
      assertNull(driver1.getName());
      assertEquals("\nDisponibilidade : ", driver2.getAddress());
      assertEquals("", driver2.getVehicle());
      assertEquals(60.0, driver2.getDeviation(), 0.01);
      assertEquals((-1007.378834941), driver2.getRating(), 0.01);
      assertEquals("Ou:", driver2.getPassword());
      assertEquals(6578, driver2.getNumberOfReviews());
      assertEquals(0, driver2.getExp());
      assertNull(driver2.getName());
      assertEquals("Ou:", driver2.getEmail());
      assertTrue(driver2.isAvailable());
      assertEquals(6578.0, driver2.getMoney(), 0.01);
      assertEquals(0, driver2.getNumberOfTrips());
      assertEquals("uMer.Driver", driver2.getCompany());
      assertEquals(60.0, driver2.getTotalDistance(), 0.01);
      assertEquals(60.0, driver2.getTimeCompliance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      Boolean boolean0 = Boolean.valueOf("0/y@k%mZqbLIN");
      assertFalse(boolean0);
      assertNotNull(boolean0);
      
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      assertNotNull(arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      Driver driver0 = new Driver("", "", "0/y@k%mZqbLIN", "", localDate0, 3043.22, 2389.379041, boolean0, 2.0, arrayList0, 1, (-3596.73), 0.0, "\nDisponibilidade : ", "", 1);
      assertNotNull(driver0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(1.0, driver0.getDeviation(), 0.01);
      assertEquals(2389.379041, driver0.getRating(), 0.01);
      assertEquals(1, driver0.getNumberOfReviews());
      assertEquals(0, driver0.getExp());
      assertEquals(3043.22, driver0.getTotalDistance(), 0.01);
      assertEquals("\nDisponibilidade : ", driver0.getVehicle());
      assertFalse(driver0.isAvailable());
      assertEquals("", driver0.getAddress());
      assertEquals("", driver0.getCompany());
      assertEquals((-3596.73), driver0.getMoney(), 0.01);
      assertEquals("", driver0.getEmail());
      assertEquals(2.0, driver0.getTimeCompliance(), 0.01);
      assertEquals("", driver0.getName());
      assertEquals("0/y@k%mZqbLIN", driver0.getPassword());
      
      Driver driver1 = driver0.clone();
      assertNotSame(driver0, driver1);
      assertNotSame(driver1, driver0);
      assertFalse(driver1.equals((Object)driver0));
      assertNotNull(driver1);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(1.0, driver0.getDeviation(), 0.01);
      assertEquals(2389.379041, driver0.getRating(), 0.01);
      assertEquals(1, driver0.getNumberOfReviews());
      assertEquals(0, driver0.getExp());
      assertEquals(3043.22, driver0.getTotalDistance(), 0.01);
      assertEquals("\nDisponibilidade : ", driver0.getVehicle());
      assertFalse(driver0.isAvailable());
      assertEquals("", driver0.getAddress());
      assertEquals("", driver0.getCompany());
      assertEquals((-3596.73), driver0.getMoney(), 0.01);
      assertEquals("", driver0.getEmail());
      assertEquals(2.0, driver0.getTimeCompliance(), 0.01);
      assertEquals("", driver0.getName());
      assertEquals("0/y@k%mZqbLIN", driver0.getPassword());
      assertEquals(3043.22, driver1.getTotalDistance(), 0.01);
      assertFalse(driver1.isAvailable());
      assertEquals(1, driver1.getNumberOfReviews());
      assertEquals(2.0, driver1.getTimeCompliance(), 0.01);
      assertEquals("", driver1.getAddress());
      assertEquals("\nDisponibilidade : ", driver1.getVehicle());
      assertEquals(0, driver1.getExp());
      assertEquals("", driver1.getName());
      assertEquals("", driver1.getEmail());
      assertEquals(1.0, driver1.getDeviation(), 0.01);
      assertEquals("", driver1.getCompany());
      assertEquals((-3596.73), driver1.getMoney(), 0.01);
      assertEquals(2389.379041, driver1.getRating(), 0.01);
      assertEquals(0, driver1.getNumberOfTrips());
      assertEquals("0/y@k%mZqbLIN", driver1.getPassword());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      assertNotNull(localDate0);
      
      Driver driver0 = new Driver(";8ydYuv?W1O<", ";8ydYuv?W1O<", ";8ydYuv?W1O<", ";8ydYuv?W1O<", localDate0, 0L, ";8ydYuv?W1O<");
      assertNotNull(driver0);
      assertEquals(0.0, driver0.getTimeCompliance(), 0.01);
      assertEquals(";8ydYuv?W1O<", driver0.getAddress());
      assertEquals(";8ydYuv?W1O<", driver0.getPassword());
      assertEquals(";8ydYuv?W1O<", driver0.getEmail());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertTrue(driver0.isAvailable());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertNull(driver0.getVehicle());
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(";8ydYuv?W1O<", driver0.getName());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(";8ydYuv?W1O<", driver0.getCompany());
      
      driver0.addRating((-2066));
      assertEquals(0.0, driver0.getTimeCompliance(), 0.01);
      assertEquals(";8ydYuv?W1O<", driver0.getAddress());
      assertEquals(";8ydYuv?W1O<", driver0.getPassword());
      assertEquals(";8ydYuv?W1O<", driver0.getEmail());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertTrue(driver0.isAvailable());
      assertEquals((-41320.0), driver0.getRating(), 0.01);
      assertNull(driver0.getVehicle());
      assertEquals(1, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals((-2070), driver0.getExp());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(";8ydYuv?W1O<", driver0.getName());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(";8ydYuv?W1O<", driver0.getCompany());
      
      Driver driver1 = driver0.clone();
      assertNotSame(driver0, driver1);
      assertNotSame(driver1, driver0);
      assertFalse(driver1.equals((Object)driver0));
      assertNotNull(driver1);
      assertEquals(0.0, driver0.getTimeCompliance(), 0.01);
      assertEquals(";8ydYuv?W1O<", driver0.getAddress());
      assertEquals(";8ydYuv?W1O<", driver0.getPassword());
      assertEquals(";8ydYuv?W1O<", driver0.getEmail());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertTrue(driver0.isAvailable());
      assertEquals((-41320.0), driver0.getRating(), 0.01);
      assertNull(driver0.getVehicle());
      assertEquals(1, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals((-2070), driver0.getExp());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(";8ydYuv?W1O<", driver0.getName());
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(";8ydYuv?W1O<", driver0.getCompany());
      assertEquals(";8ydYuv?W1O<", driver1.getPassword());
      assertNull(driver1.getVehicle());
      assertEquals(";8ydYuv?W1O<", driver1.getAddress());
      assertEquals(0, driver1.getNumberOfTrips());
      assertEquals(0.0, driver1.getDeviation(), 0.01);
      assertEquals((-41320.0), driver1.getRating(), 0.01);
      assertEquals(1, driver1.getNumberOfReviews());
      assertEquals(";8ydYuv?W1O<", driver1.getName());
      assertTrue(driver1.isAvailable());
      assertEquals((-2070), driver1.getExp());
      assertEquals(0.0, driver1.getTimeCompliance(), 0.01);
      assertEquals(";8ydYuv?W1O<", driver1.getCompany());
      assertEquals(";8ydYuv?W1O<", driver1.getEmail());
      assertEquals(0.0, driver1.getMoney(), 0.01);
      assertEquals(0.0, driver1.getTotalDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      Driver driver0 = new Driver("\nDisponibilidade : ", "", "Ou:", "", localDate0, 60.0, "");
      assertNotNull(driver0);
      assertTrue(driver0.isAvailable());
      assertEquals("", driver0.getCompany());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals(60.0, driver0.getTimeCompliance(), 0.01);
      assertEquals("", driver0.getAddress());
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertNull(driver0.getVehicle());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals("Ou:", driver0.getPassword());
      assertEquals("", driver0.getName());
      assertEquals("\nDisponibilidade : ", driver0.getEmail());
      
      driver0.setdeviation(60.0);
      assertTrue(driver0.isAvailable());
      assertEquals("", driver0.getCompany());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals(60.0, driver0.getTimeCompliance(), 0.01);
      assertEquals("", driver0.getAddress());
      assertEquals(0, driver0.getNumberOfReviews());
      assertNull(driver0.getVehicle());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals("Ou:", driver0.getPassword());
      assertEquals("", driver0.getName());
      assertEquals(60.0, driver0.getDeviation(), 0.01);
      assertEquals("\nDisponibilidade : ", driver0.getEmail());
      
      Driver driver1 = driver0.clone();
      assertNotSame(driver0, driver1);
      assertNotSame(driver1, driver0);
      assertFalse(driver1.equals((Object)driver0));
      assertNotNull(driver1);
      assertTrue(driver0.isAvailable());
      assertEquals("", driver0.getCompany());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals(60.0, driver0.getTimeCompliance(), 0.01);
      assertEquals("", driver0.getAddress());
      assertEquals(0, driver0.getNumberOfReviews());
      assertNull(driver0.getVehicle());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals(0, driver0.getNumberOfTrips());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(0, driver0.getExp());
      assertEquals("Ou:", driver0.getPassword());
      assertEquals("", driver0.getName());
      assertEquals(60.0, driver0.getDeviation(), 0.01);
      assertEquals("\nDisponibilidade : ", driver0.getEmail());
      assertNull(driver1.getVehicle());
      assertEquals(0, driver1.getNumberOfReviews());
      assertEquals("\nDisponibilidade : ", driver1.getEmail());
      assertEquals("Ou:", driver1.getPassword());
      assertEquals(0.0, driver1.getMoney(), 0.01);
      assertEquals(0.0, driver1.getTotalDistance(), 0.01);
      assertTrue(driver1.isAvailable());
      assertEquals(0, driver1.getExp());
      assertEquals("", driver1.getName());
      assertEquals(60.0, driver1.getDeviation(), 0.01);
      assertEquals("", driver1.getAddress());
      assertEquals("", driver1.getCompany());
      assertEquals(60.0, driver1.getTimeCompliance(), 0.01);
      assertEquals(0, driver1.getNumberOfTrips());
      assertEquals(0.0, driver1.getRating(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofYearDay((-1577), 3);
      Boolean boolean0 = new Boolean(false);
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Driver driver0 = new Driver("", "", "", "vppum_", localDate0, (-1577), 0.0, boolean0, 0.0, arrayList0, 3, 0.0, 3, "", "", (-1577));
      Driver driver1 = driver0.clone();
      assertEquals(3, driver1.getNumberOfReviews());
      assertEquals((-1577.0), driver1.getDeviation(), 0.01);
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals((-1577.0), driver0.getDeviation(), 0.01);
      assertEquals(3, driver0.getNumberOfReviews());
      assertEquals("", driver1.getVehicle());
      assertEquals("", driver1.getCompany());
      assertEquals(0.0, driver0.getTimeCompliance(), 0.01);
      assertEquals(0, driver1.getExp());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Period period0 = Period.ofMonths(5);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Boolean boolean0 = new Boolean("");
      Driver driver0 = new Driver("Driver \n", "TbmHb/v,6}f,9", "TbmHb/v,6}f,9", "", localDate0, (-1173.81998201334), "@,cYv&.*TQ'Th");
      ArrayList<Trip> arrayList0 = driver0.getTrips();
      arrayList0.add((Trip) null);
      Driver driver1 = new Driver("", "+", "", "", localDate0, 0.0, (-1753.9966), boolean0, 1480.229779315, arrayList0, 1, (-3029.756909621), 3549.6, "O7Q?Mp<o}5dBG$", "+", 0.0);
      // Undeclared exception!
      try { 
        driver1.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("{4s4)7D45D`", "X:[]O5)j3z'F", "{4s4)7D45D`", "y}0GllT2J!EL(v$", localDate0, (-1), "X:[]O5)j3z'F");
      // Undeclared exception!
      try { 
        driver0.addTrip((Trip) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Driver driver0 = null;
      try {
        driver0 = new Driver((Driver) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.Driver", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Driver driver0 = null;
      try {
        driver0 = new Driver("", (String) null, "\nN\u00FAmero de classifica\u00E7\u00F5es : ", (String) null, (LocalDate) null, 0.0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Period period0 = Period.ZERO;
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Driver driver0 = null;
      try {
        driver0 = new Driver("Viagem de (", "", "\nClassifica\u00E7\u00E3o : ", "", localDate0, 4937.7, 4937.7, (Boolean) null, 0.0, arrayList0, 1226, (-2828.73254162), (-2828.73254162), "", "", 1226);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.Driver", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver((String) null, "t=b+fMME[;P42No2", "I8>5OEYEi1", "I8>5OEYEi1", localDate0, 80.22556505, (String) null);
      String string0 = driver0.getCompany();
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(80.22556505, driver0.getTimeCompliance(), 0.01);
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertNull(string0);
      assertTrue(driver0.isAvailable());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Boolean boolean0 = Boolean.valueOf("0/y@k%mZqbLIN");
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Driver driver0 = new Driver("", "", "0/y@k%mZqbLIN", "", localDate0, 3043.22, 2389.379041, boolean0, 2.0, arrayList0, 1, (-3596.73), 0.0, "\nDisponibilidade : ", "", 1);
      int int0 = driver0.getNumberOfReviews();
      assertEquals("\nDisponibilidade : ", driver0.getVehicle());
      assertEquals(2389.379041, driver0.getRating(), 0.01);
      assertEquals(1.0, driver0.getDeviation(), 0.01);
      assertEquals("", driver0.getCompany());
      assertEquals(1, int0);
      assertEquals(2.0, driver0.getTimeCompliance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("\nDisponibilidade : ", "", "Ou:", "", localDate0, 60.0, "");
      Driver driver1 = new Driver(driver0);
      assertEquals(60.0, driver0.getTimeCompliance(), 0.01);
      assertEquals(60.0, driver1.getTimeCompliance(), 0.01);
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0, driver1.getExp());
      assertTrue(driver1.isAvailable());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals("", driver1.getCompany());
      assertEquals(0, driver1.getNumberOfReviews());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Boolean boolean0 = Boolean.valueOf("0/y@k%mZqbLIN");
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Driver driver0 = new Driver("", "", "0/y@k%mZqbLIN", "", localDate0, 3043.22, 2389.379041, boolean0, 2.0, arrayList0, 1, (-3596.73), 0.0, "\nDisponibilidade : ", "", 1);
      int int0 = driver0.getExp();
      assertEquals("\nDisponibilidade : ", driver0.getVehicle());
      assertEquals(2.0, driver0.getTimeCompliance(), 0.01);
      assertEquals(1, driver0.getNumberOfReviews());
      assertEquals(1.0, driver0.getDeviation(), 0.01);
      assertEquals(2389.379041, driver0.getRating(), 0.01);
      assertEquals("", driver0.getCompany());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Boolean boolean0 = Boolean.valueOf(true);
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Driver driver0 = new Driver((String) null, (String) null, "Viagem de (", (String) null, localDate0, 2108.6535548, (-416.32), boolean0, (-416.32), arrayList0, (-919), 2108.6535548, (-919), "Viagem de (", "", 2108.6535548);
      driver0.isAvailable();
      assertEquals((-416.32), driver0.getRating(), 0.01);
      assertEquals((-416.32), driver0.getTimeCompliance(), 0.01);
      assertEquals((-919), driver0.getNumberOfReviews());
      assertEquals("", driver0.getCompany());
      assertEquals("Viagem de (", driver0.getVehicle());
      assertEquals(2108.6535548, driver0.getDeviation(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(3812L);
      Driver driver0 = new Driver(";8ydYuv?U1O<", ";8ydYuv?U1O<", "", "", localDate0, 3812L, "");
      Double double0 = driver0.getRating();
      assertEquals("", driver0.getCompany());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(0.0, (double)double0, 0.01);
      assertTrue(driver0.isAvailable());
      assertEquals(3812.0, driver0.getTimeCompliance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofYearDay((-406), 20);
      Driver driver0 = new Driver("NjD[I}lXwD-WgwO", "NjD[I}lXwD-WgwO", "2", "2", localDate0, (-331.041), "NjD[I}lXwD-WgwO");
      double double0 = driver0.getDeviation();
      assertEquals(0.0, double0, 0.01);
      assertEquals((-331.041), driver0.getTimeCompliance(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals("NjD[I}lXwD-WgwO", driver0.getCompany());
      assertTrue(driver0.isAvailable());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Period period0 = Period.ofMonths(5);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Driver driver0 = new Driver("Driver \n", "TbmHb/v,6}f,9", "TbmHb/v,6}f,9", "", localDate0, (-1173.81998201334), "@,cYv&.*TQ'Th");
      driver0.getVehicle();
      assertEquals("@,cYv&.*TQ'Th", driver0.getCompany());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertTrue(driver0.isAvailable());
      assertEquals((-1173.81998201334), driver0.getTimeCompliance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-30L));
      Driver driver0 = new Driver("0#V8(C427", "0#V8(C427", "0#V8(C427", "0#V8(C427", localDate0, (-30L), "0#V8(C427");
      driver0.addRating(3165);
      driver0.clone();
      assertEquals(1, driver0.getNumberOfReviews());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("Driver \n", "Driver \n", "Driver \n", "Driver \n", localDate0, (-2046), "Driver \n");
      driver0.setExp((-2046));
      assertEquals((-2046), driver0.getExp());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("Driver \n", "Driver \n", "Driver \n", "Driver \n", localDate0, (-2046), "Driver \n");
      driver0.setVehicle("Driver \nUtilizador - Driver \n\neMail : Driver \n\nPassword : Driver \n\nMorada : Driver \n\nData de nascimento : 2014-02-14\nDist\u00E2ncia Total : 0.0\nDinheiro gasto/ganho : 0.0\nN\u00FAmero de viagens :0\nDisponibilidade : true\nClassifica\u00E7\u00E3o : 0.0\nGrau de cumprimento : -2046.0\nN\u00FAmero de classifica\u00E7\u00F5es : 0\nVe\u00EDculo : null\nDesvio total : 0.0\n");
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertTrue(driver0.isAvailable());
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertEquals((-2046.0), driver0.getTimeCompliance(), 0.01);
      assertEquals(0, driver0.getNumberOfReviews());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Boolean boolean0 = Boolean.valueOf(false);
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Driver driver0 = new Driver("", "", "", "c8nH", localDate0, 28.1, 2359.76082, boolean0, 28.1, arrayList0, 3828, (-1.0), 1943.58, "", "c8nH", 3911.24405);
      assertEquals(2359.76082, driver0.getRating(), 0.01);
      
      driver0.setRating((-1.0));
      assertEquals(3911.24405, driver0.getDeviation(), 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("Driver \n", "Driver \n", "Driver \n", "Driver \n", localDate0, (-2046), "Driver \n");
      String string0 = driver0.toString();
      assertEquals("Driver \nUtilizador - Driver \n\neMail : Driver \n\nPassword : Driver \n\nMorada : Driver \n\nData de nascimento : 2014-02-14\nDist\u00E2ncia Total : 0.0\nDinheiro gasto/ganho : 0.0\nN\u00FAmero de viagens :0\nDisponibilidade : true\nClassifica\u00E7\u00E3o : 0.0\nGrau de cumprimento : -2046.0\nN\u00FAmero de classifica\u00E7\u00F5es : 0\nVe\u00EDculo : null\nDesvio total : 0.0\n", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutes(0, 0);
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Driver driver0 = new Driver((String) null, (String) null, "", "", localDate0, 0, "TZ0%8");
      // Undeclared exception!
      try { 
        driver0.equals(driver0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Boolean boolean0 = Boolean.valueOf(false);
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Driver driver0 = new Driver("", "", "", "c8nH", localDate0, 28.1, 2359.76082, boolean0, 28.1, arrayList0, 3828, (-1.0), 1943.58, "", "c8nH", 3911.24405);
      // Undeclared exception!
      try { 
        driver0.setAvailability((Boolean) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.Driver", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-30L));
      Driver driver0 = new Driver("0#V8(C427", "0#V8(C427", "0#V8(C427", "0#V8(C427", localDate0, (-30L), "0#V8(C427");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Trip trip0 = new Trip(3165, point2D_Double0, point2D_Double0, (Double) 0.0, (Double) 0.0, localDate0, "0#V8(C427", "0#V8(C427", "0#V8(C427", 3165, 0.0, point2D_Double0, 0.0, (-30L), 0.0);
      driver0.addTrip(trip0);
      Driver driver1 = driver0.clone();
      assertEquals(0.0, driver0.getDeviation(), 0.01);
      assertEquals(0, driver1.getExp());
      assertEquals(0, driver1.getNumberOfReviews());
      assertEquals((-30.0), driver0.getTimeCompliance(), 0.01);
      assertEquals(0.0, driver1.getTotalDistance(), 0.01);
      assertEquals((-30.0), driver1.getTimeCompliance(), 0.01);
      assertEquals(0.0, driver0.getRating(), 0.01);
      assertTrue(driver1.isAvailable());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Boolean boolean0 = Boolean.valueOf(false);
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Driver driver0 = new Driver("", "", "", "c8nH", localDate0, 28.1, 2359.76082, boolean0, 28.1, arrayList0, 3828, (-1.0), 1943.58, "", "c8nH", 3911.24405);
      Double double0 = driver0.getTimeCompliance();
      assertEquals(28.1, (double)double0, 0.01);
      assertEquals(3911.24405, driver0.getDeviation(), 0.01);
      assertEquals(2359.76082, driver0.getRating(), 0.01);
      assertEquals("", driver0.getVehicle());
      assertEquals("c8nH", driver0.getCompany());
      assertEquals(3828, driver0.getNumberOfReviews());
  }
}
