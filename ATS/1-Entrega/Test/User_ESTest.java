/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 17 23:24:01 GMT 2018
 */

package uMer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.Point2D;
import java.time.Clock;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.Month;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.IsoChronology;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.junit.runner.RunWith;
import uMer.Client;
import uMer.Driver;
import uMer.Trip;
import uMer.User;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class User_ESTest extends User_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Period period0 = Period.ZERO;
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Point2D.Double point2D_Double0 = new Point2D.Double(945, 945);
      Client client0 = new Client("!Vuhp-", "w2j,X]+}", "!Vuhp-", "!Vuhp-", localDate0);
      Trip trip0 = new Trip(945, point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) 945.0, localDate0, "!Vuhp-", (String) null, "w2j,X]+}", 945, 945, point2D_Double0, 945, 945.0, 945.0);
      client0.addTrip(trip0);
      assertEquals(945.0, client0.getMoney(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofYearDay(158, 158);
      Client client0 = new Client("sJ!YYU]aVW", "sJ!YYU]aVW", "\nN\u00FAmero de viagens :", "\nN\u00FAmero de viagens :", localDate0);
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, 158);
      Point2D.Double point2D_Double1 = new Point2D.Double();
      Trip trip0 = new Trip(158, point2D_Double0, point2D_Double1, (Double) 0.0, (Double) 0.0, localDate0, "\nN\u00FAmero de viagens :", ".5[,?a", ".5[,?a", 1, 2917.322, point2D_Double1, 0.0, 499.76696209815, 0.0);
      client0.addTrip(trip0);
      assertEquals(158.0, client0.getTotalDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(42L);
      Client client0 = new Client((String) null, (String) null, (String) null, (String) null, localDate0);
      Trip trip0 = new Trip();
      client0.addTrip(trip0);
      assertEquals(0.0, client0.getTotalDistance(), 0.01);
      assertEquals(0.0, client0.getMoney(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Clock clock0 = MockClock.systemDefaultZone();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Driver driver0 = new Driver("uMer.User", "uMer.User", "Gy", "Gy", localDate0, (-1348.741), "uMer.User");
      String string0 = driver0.toString();
      assertEquals("Driver \nUtilizador - uMer.User\neMail : uMer.User\nPassword : Gy\nMorada : Gy\nData de nascimento : 2014-02-14\nDist\u00E2ncia Total : 0.0\nDinheiro gasto/ganho : 0.0\nN\u00FAmero de viagens :0\nDisponibilidade : true\nClassifica\u00E7\u00E3o : 0.0\nGrau de cumprimento : -1348.741\nN\u00FAmero de classifica\u00E7\u00F5es : 0\nVe\u00EDculo : null\nDesvio total : 0.0\n", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Driver driver0 = new Driver("/KU", ")\nData : ", "rz$[W9AM3 P#,;k", "\neMail : ", localDate0, (-1435L), "\neMail : ");
      double double0 = driver0.getTotalDistance();
      assertEquals("\neMail : ", driver0.getAddress());
      assertEquals(")\nData : ", driver0.getName());
      assertEquals("/KU", driver0.getEmail());
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals("rz$[W9AM3 P#,;k", driver0.getPassword());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofYearDay(2, 2);
      Boolean boolean0 = new Boolean("\nDura\u00E7\u00E3o prevista : ");
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Driver driver0 = new Driver("\nDura\u00E7\u00E3o prevista : ", "LW\"hH'3<t4+", "LW\"hH'3<t4+", "\nDura\u00E7\u00E3o prevista : ", localDate0, 423.76, 2, boolean0, 2, arrayList0, 1, 0.0, 0.0, "-E-R2", "-E-R2", 1);
      double double0 = driver0.getTotalDistance();
      assertEquals(423.76, double0, 0.01);
      assertEquals("\nDura\u00E7\u00E3o prevista : ", driver0.getAddress());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals("\nDura\u00E7\u00E3o prevista : ", driver0.getEmail());
      assertEquals("LW\"hH'3<t4+", driver0.getPassword());
      assertEquals("LW\"hH'3<t4+", driver0.getName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Driver driver0 = new Driver("/KU", ")\nData : ", "rz$[W9AM3 P#,;k", "\neMail : ", localDate0, (-1435L), "\neMail : ");
      String string0 = driver0.getPassword();
      assertEquals("rz$[W9AM3 P#,;k", string0);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals(")\nData : ", driver0.getName());
      assertEquals("/KU", driver0.getEmail());
      assertEquals("\neMail : ", driver0.getAddress());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(522L);
      Client client0 = new Client("\u20AC", "%5", "", "", localDate0);
      String string0 = client0.getPassword();
      assertEquals("", string0);
      assertEquals("", client0.getAddress());
      assertEquals(0.0, client0.getTotalDistance(), 0.01);
      assertEquals("%5", client0.getName());
      assertEquals(0.0, client0.getMoney(), 0.01);
      assertEquals("\u20AC", client0.getEmail());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Period period0 = Period.ofMonths(0);
      IsoChronology isoChronology0 = period0.getChronology();
      ZoneId zoneId0 = ZoneId.systemDefault();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0, zoneId0);
      Driver driver0 = new Driver("", "]\nTempo previsto at\u00E9 ao cliente : ", "]\nTempo previsto at\u00E9 ao cliente : ", "", localDate0, 0, "");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Trip trip0 = new Trip(3030, point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) point2D_Double0.y, localDate0, "\nPassword : ", "=X", "", 3030, 0, point2D_Double0, 0.0, (-1293.01), 0.0);
      driver0.addTrip(trip0);
      driver0.getNumberOfTrips();
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals("]\nTempo previsto at\u00E9 ao cliente : ", driver0.getPassword());
      assertEquals("]\nTempo previsto at\u00E9 ao cliente : ", driver0.getName());
      assertEquals("", driver0.getEmail());
      assertEquals("", driver0.getAddress());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(42L);
      Client client0 = new Client((String) null, (String) null, (String) null, (String) null, localDate0);
      client0.getName();
      assertEquals(0.0, client0.getMoney(), 0.01);
      assertEquals(0.0, client0.getTotalDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Month month0 = Month.MAY;
      LocalDate localDate0 = MockLocalDate.of((-1), month0, 2);
      Client client0 = new Client("\nPassword : ", "\nPassword : ", "\nMatr\u00EDcula ve\u00EDculo : ", "^OPdOP;m$\";yYt&\"t}l", localDate0);
      String string0 = client0.getName();
      assertEquals(0.0, client0.getTotalDistance(), 0.01);
      assertEquals("^OPdOP;m$\";yYt&\"t}l", client0.getAddress());
      assertEquals("\nPassword : ", string0);
      assertEquals("\nPassword : ", client0.getEmail());
      assertEquals("\nMatr\u00EDcula ve\u00EDculo : ", client0.getPassword());
      assertEquals(0.0, client0.getMoney(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Period period0 = Period.ZERO;
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Boolean boolean0 = Boolean.FALSE;
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Driver driver0 = new Driver("aVul}vKA~~B(;Ljo-'", "aVul}vKA~~B(;Ljo-'", "\nPassword : ", "aVul}vKA~~B(;Ljo-'", localDate0, (-2527.0609308237), (-2527.0609308237), boolean0, 3600.0, arrayList0, 0, 1239.66638681, 3600.0, "\nPassword : ", "uMer.User", 1239.66638681);
      double double0 = driver0.getMoney();
      assertEquals("aVul}vKA~~B(;Ljo-'", driver0.getAddress());
      assertEquals((-2527.0609308237), driver0.getTotalDistance(), 0.01);
      assertEquals("aVul}vKA~~B(;Ljo-'", driver0.getEmail());
      assertEquals("\nPassword : ", driver0.getPassword());
      assertEquals(1239.66638681, double0, 0.01);
      assertEquals("aVul}vKA~~B(;Ljo-'", driver0.getName());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("v{}", "", "vOoOh}?C%r#cF3N", ")\nPontos : ", localDate0, 1.0, "M\"<:bLw_?pV?rswJ");
      driver0.setMoney((-4412));
      double double0 = driver0.getMoney();
      assertEquals((-4412.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Driver driver0 = new Driver((String) null, ")\nPontos : ", ")\nPontos : ", ",]^Sxplr`tpK8}<", localDate0, 0.0, "");
      String string0 = driver0.getEmail();
      assertEquals(")\nPontos : ", driver0.getPassword());
      assertEquals(")\nPontos : ", driver0.getName());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(",]^Sxplr`tpK8}<", driver0.getAddress());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Client client0 = new Client("", "", "", "Utilizador - ", localDate0);
      String string0 = client0.getEmail();
      assertEquals(0.0, client0.getMoney(), 0.01);
      assertEquals(0.0, client0.getTotalDistance(), 0.01);
      assertEquals("", string0);
      assertEquals("", client0.getName());
      assertEquals("", client0.getPassword());
      assertEquals("Utilizador - ", client0.getAddress());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client(")\nPontos : ", "1#\"<5|,mfW", "\nMorada : ", ")\nPontos : ", localDate0);
      String string0 = client0.getAddress();
      assertEquals(0.0, client0.getTotalDistance(), 0.01);
      assertEquals("\nMorada : ", client0.getPassword());
      assertEquals("1#\"<5|,mfW", client0.getName());
      assertEquals(0.0, client0.getMoney(), 0.01);
      assertEquals(")\nPontos : ", string0);
      assertEquals(")\nPontos : ", client0.getEmail());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(522L);
      Client client0 = new Client("\u20AC", "%5", "", "", localDate0);
      String string0 = client0.getAddress();
      assertEquals("", string0);
      assertEquals("%5", client0.getName());
      assertEquals("\u20AC", client0.getEmail());
      assertEquals("", client0.getPassword());
      assertEquals(0.0, client0.getMoney(), 0.01);
      assertEquals(0.0, client0.getTotalDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>(0);
      Client client0 = new Client("", "", "", "bGb6Ja", localDate0, point2D_Double0, (-1172.85072), arrayList0, 0, 0, false, "\nN\u00FAmero de viagens :");
      client0.equals((User) client0);
      assertEquals((-1172.85072), client0.getTotalDistance(), 0.01);
      assertEquals("", client0.getPassword());
      assertEquals("", client0.getName());
      assertEquals("", client0.getEmail());
      assertEquals("bGb6Ja", client0.getAddress());
      assertEquals(0.0, client0.getMoney(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds((-1770));
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Driver driver0 = new Driver("sJ!YYU]aVW", "sJ!YYU]aVW", "", "", localDate0, (-1770), "sJ!YYU]aVW");
      Driver driver1 = new Driver("", "", "sJ!YYU]aVW", "", localDate0, (-1770), "m");
      boolean boolean0 = driver0.equals((User) driver1);
      assertFalse(boolean0);
      assertEquals(0.0, driver1.getTotalDistance(), 0.01);
      assertEquals(0.0, driver1.getMoney(), 0.01);
      assertEquals("", driver0.getAddress());
      assertEquals("", driver1.getEmail());
      assertEquals("", driver1.getAddress());
      assertEquals("sJ!YYU]aVW", driver1.getPassword());
      assertEquals("sJ!YYU]aVW", driver0.getName());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Client client0 = new Client("", "", "", "Utilizador - ", localDate0);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Trip trip0 = new Trip(121, point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) point2D_Double0.y, localDate0, "", ",^MA@", "", 1923, 121.0, point2D_Double0, 1923, 0.0, 0.0);
      client0.addTrip(trip0);
      User user0 = client0.clone();
      assertEquals("Utilizador - ", user0.getAddress());
      assertEquals("", user0.getName());
      assertEquals("", user0.getEmail());
      assertEquals(0.0, client0.getTotalDistance(), 0.01);
      assertEquals("", user0.getPassword());
      assertEquals(0.0, client0.getMoney(), 0.01);
      assertEquals(1, user0.getNumberOfTrips());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Driver driver0 = new Driver(")}hE'", "", "", "\nMatr\u00EDcula ve\u00EDculo : ", localDate0, 0.0, "");
      User user0 = driver0.clone();
      assertEquals(")}hE'", user0.getEmail());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals("", user0.getName());
      assertEquals("", user0.getPassword());
      assertEquals("\nMatr\u00EDcula ve\u00EDculo : ", user0.getAddress());
      assertEquals(0.0, driver0.getMoney(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Period period0 = Period.ZERO;
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Boolean boolean0 = Boolean.FALSE;
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Driver driver0 = new Driver("aVul}vKA~~B(;Ljo-'", "aVul}vKA~~B(;Ljo-'", "\nPassword : ", "aVul}vKA~~B(;Ljo-'", localDate0, (-2527.0609308237), (-2527.0609308237), boolean0, 3600.0, arrayList0, 0, 1239.66638681, 3600.0, "\nPassword : ", "uMer.User", 1239.66638681);
      User user0 = driver0.clone();
      assertEquals(1239.66638681, driver0.getMoney(), 0.01);
      assertEquals("aVul}vKA~~B(;Ljo-'", user0.getName());
      assertEquals((-2527.0609308237), driver0.getTotalDistance(), 0.01);
      assertEquals("aVul}vKA~~B(;Ljo-'", user0.getEmail());
      assertEquals("\nPassword : ", user0.getPassword());
      assertEquals("aVul}vKA~~B(;Ljo-'", user0.getAddress());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Period period0 = Period.ofMonths(0);
      IsoChronology isoChronology0 = period0.getChronology();
      ZoneOffset zoneOffset0 = ZoneOffset.ofHours(0);
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0, (ZoneId) zoneOffset0);
      Point2D.Double point2D_Double0 = new Point2D.Double((-492.77131286349), 0);
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Client client0 = new Client("p", "p", "p", "p", localDate0, point2D_Double0, 4.0, arrayList0, 1, (-492.77131286349), true, "p");
      client0.clone();
      assertEquals((-492.77131286349), client0.getMoney(), 0.01);
      assertEquals(4.0, client0.getTotalDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("sJ!YYU]aVW", "", "\nDesvio total : ", "", localDate0, (-3259.7707762941186), "");
      // Undeclared exception!
      try { 
        driver0.setBirthday((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, (-1558.030515850296));
      Client client0 = new Client("sJ!YYU]aVW", "sJ!YYU]aVW", "sJ!YYU]aVW", "sJ!YYU]aVW", localDate0);
      ArrayList<Trip> arrayList0 = client0.getTrips();
      Trip trip0 = new Trip();
      arrayList0.add(trip0);
      Client client1 = new Client("sJ!YYU]aVW", "d;Jhu(0k>>>+-:5R>", "sJ!YYU]aVW", "sJ!YYU]aVW", localDate0, point2D_Double0, (-320.716839), arrayList0, (-2821), (-320.716839), true, "sJ!YYU]aVW");
      // Undeclared exception!
      try { 
        client1.getTrips();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Clock clock0 = MockClock.systemDefaultZone();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Driver driver0 = new Driver("uMer.User", "uMer.User", "Gy", "Gy", localDate0, (-1348.741), "uMer.User");
      ArrayList<Trip> arrayList0 = driver0.getTrips();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Client client0 = new Client("aW.G+", "(9JNe0`.pD^s)zw", "(9JNe0`.pD^s)zw", "X{L-]\"[V`f601D", localDate0, point2D_Double0, (-1.0), arrayList0, 0, 0L, false, "X{L-]\"[V`f601D");
      double double0 = client0.getTotalDistance();
      assertEquals("aW.G+", client0.getEmail());
      assertEquals(0.0, client0.getMoney(), 0.01);
      assertEquals("uMer.User", driver0.getName());
      assertEquals("(9JNe0`.pD^s)zw", client0.getName());
      assertEquals("(9JNe0`.pD^s)zw", client0.getPassword());
      assertEquals("X{L-]\"[V`f601D", client0.getAddress());
      assertEquals((-1.0), double0, 0.01);
      assertEquals("Gy", driver0.getPassword());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Driver driver0 = new Driver("/KU", ")\nData : ", "rz$[W9AM3 P#,;k", "\neMail : ", localDate0, (-1435L), "\neMail : ");
      String string0 = driver0.getEmail();
      assertEquals("\neMail : ", driver0.getAddress());
      assertEquals(")\nData : ", driver0.getName());
      assertEquals("/KU", string0);
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals("rz$[W9AM3 P#,;k", driver0.getPassword());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Client client0 = new Client("", "", "", "Utilizador - ", localDate0);
      String string0 = client0.getName();
      assertEquals("", string0);
      assertEquals("", client0.getEmail());
      assertEquals("Utilizador - ", client0.getAddress());
      assertEquals(0.0, client0.getTotalDistance(), 0.01);
      assertEquals("", client0.getPassword());
      assertEquals(0.0, client0.getMoney(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("\nMorada : ", "\nMorada : ", ")\nPontos : ", ")\nPontos : ", localDate0, 1.0, ")\nPontos : ");
      driver0.getBirthday();
      assertEquals("\nMorada : ", driver0.getEmail());
      assertEquals("\nMorada : ", driver0.getName());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(")\nPontos : ", driver0.getPassword());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals(")\nPontos : ", driver0.getAddress());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Point2D.Double point2D_Double0 = new Point2D.Double(3600.0, 3600.0);
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Client client0 = new Client(",OU}JCM;2#C", ",OU}JCM;2#C", (String) null, (String) null, localDate0, point2D_Double0, 3600.0, arrayList0, (-6003), 3600.0, true, "uMer.Driver");
      String string0 = client0.getAddress();
      assertEquals(3600.0, client0.getMoney(), 0.01);
      assertNull(string0);
      assertEquals(3600.0, client0.getTotalDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("v{}", "", "vOoOh}?C%r#cF3N", ")\nPontos : ", localDate0, 1.0, "M\"<:bLw_?pV?rswJ");
      double double0 = driver0.getMoney();
      assertEquals("", driver0.getName());
      assertEquals("vOoOh}?C%r#cF3N", driver0.getPassword());
      assertEquals(0.0, double0, 0.01);
      assertEquals(")\nPontos : ", driver0.getAddress());
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals("v{}", driver0.getEmail());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(42L);
      Client client0 = new Client((String) null, (String) null, (String) null, (String) null, localDate0);
      client0.getPassword();
      assertEquals(0.0, client0.getTotalDistance(), 0.01);
      assertEquals(0.0, client0.getMoney(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Period period0 = Period.ofWeeks(942);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Client client0 = new Client("w2j,X]+}", "w2j,X]+}", "w2j,X]+}", "w2j,X]+}", localDate0);
      Trip trip0 = new Trip(942, point2D_Double0, point2D_Double0, (Double) 0.0, (Double) 0.0, localDate0, "w2j,X]+}", "w2j,X]+}", "w2j,X]+}", 942, 942, point2D_Double0, 942, 0.0, 0.0);
      client0.addTrip(trip0);
      client0.addTrip(trip0);
      ArrayList<String> arrayList0 = client0.getDates();
      assertEquals(0.0, client0.getMoney(), 0.01);
      assertEquals(0.0, client0.getTotalDistance(), 0.01);
      assertEquals(1, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Period period0 = Period.ofWeeks(942);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Client client0 = new Client("w2j,X]+}", "w2j,X]+}", "w2j,X]+}", "w2j,X]+}", localDate0);
      client0.getDates();
      assertEquals(0.0, client0.getMoney(), 0.01);
      assertEquals(0.0, client0.getTotalDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Period period0 = Period.ofWeeks(942);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Client client0 = new Client("w2j,X]+}", "w2j,X]+}", "w2j,X]+}", "w2j,X]+}", localDate0);
      Trip trip0 = new Trip(942, point2D_Double0, point2D_Double0, (Double) 0.0, (Double) 0.0, localDate0, "w2j,X]+}", "w2j,X]+}", "w2j,X]+}", 942, 942, point2D_Double0, 942, 0.0, 0.0);
      client0.addTrip(trip0);
      ArrayList<Trip> arrayList0 = client0.getTrips();
      assertEquals(0.0, client0.getMoney(), 0.01);
      assertFalse(arrayList0.isEmpty());
      assertEquals(0.0, client0.getTotalDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client((String) null, (String) null, (String) null, (String) null, localDate0);
      client0.getNumberOfTrips();
      assertEquals(0.0, client0.getTotalDistance(), 0.01);
      assertEquals(0.0, client0.getMoney(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client(")\nPoks :", ")\nPoks :", ")\nPoks :", ")\nPoks :", localDate0);
      client0.setEmail(")\nPoks :");
      assertEquals(0.0, client0.getMoney(), 0.01);
      assertEquals(0.0, client0.getTotalDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client(")\nPoks :", ")\nPoks :", ")\nPoks :", ")\nPoks :", localDate0);
      client0.setBirthday(localDate0);
      assertEquals(0.0, client0.getTotalDistance(), 0.01);
      assertEquals(0.0, client0.getMoney(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("sZ40n", "sZ40n", "sZ40n", "sZ40n", localDate0, 0.0, "sZ40n");
      driver0.setPassword("sZ40n");
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Driver driver0 = new Driver((String) null, (String) null, (String) null, (String) null, localDate0, 1.0, (String) null);
      Trip trip0 = new Trip();
      // Undeclared exception!
      try { 
        driver0.addTrip(trip0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver(")\nPoks :", ")\nPoks :", ")\nPoks :", ")\nPoks :", localDate0, 1.0, ")\nPoks :");
      driver0.setTotalDistance((-4412));
      assertEquals((-4412.0), driver0.getTotalDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ZoneId zoneId0 = ZoneId.systemDefault();
      LocalDate localDate0 = MockLocalDate.now(zoneId0);
      Driver driver0 = new Driver("", "", "", "", localDate0, 0, "");
      driver0.setAddress("");
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(0.0, driver0.getMoney(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Client client0 = null;
      try {
        client0 = new Client();
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Invalid value for MonthOfYear (valid values 1 - 12): 0
         //
         verifyException("java.time.temporal.ValueRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(42L);
      Client client0 = new Client((String) null, (String) null, (String) null, (String) null, localDate0);
      // Undeclared exception!
      try { 
        client0.equals((User) client0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("sZ40n", "sZ40n", "sZ40n", "sZ40n", localDate0, 0.0, "sZ40n");
      driver0.setName("sZ40n");
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
  }
}
