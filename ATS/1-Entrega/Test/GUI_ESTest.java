/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 17 23:12:46 GMT 2018
 */

package uMer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.Point2D;
import java.time.Clock;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.IsoChronology;
import java.time.chrono.JapaneseDate;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.HashMap;
import java.util.TreeSet;
import javafx.stage.Stage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import uMer.Client;
import uMer.Company;
import uMer.Driver;
import uMer.GUI;
import uMer.Helicopter;
import uMer.Trip;
import uMer.UMeR;
import uMer.Van;
import uMer.Vehicle;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GUI_ESTest extends GUI_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      GUI gUI0 = new GUI();
      String string0 = gUI0.printTime((-3307.0585311811155));
      assertEquals("-3307h:-4m:-31s", string0);
  }
/*
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      GUI gUI0 = new GUI();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("umerData");
      FileSystemHandling.createFolder(evoSuiteFile0);
      // Undeclared exception!
      try { 
        gUI0.clientMenu();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.layout.VBox
         //
         verifyException("uMer.GUI", e);
      }
  }*/

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      GUI gUI0 = new GUI();
      Company company0 = new Company(")W1yXJ", ")W1yXJ");
      ArrayList<String> arrayList0 = gUI0.printTrips(company0);
      assertFalse(arrayList0.contains(")W1yXJ"));
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      GUI gUI0 = new GUI();
      UMeR uMeR0 = gUI0.umer;
      Comparator<Driver> comparator0 = (Comparator<Driver>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(comparator0).compare(any(uMer.Driver.class) , any(uMer.Driver.class));
      TreeSet<Driver> treeSet0 = uMeR0.ordDriver(comparator0);
      Period period0 = Period.ofMonths(3415);
      IsoChronology isoChronology0 = period0.getChronology();
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0, (ZoneId) zoneOffset0);
      Boolean boolean0 = Boolean.TRUE;
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Driver driver0 = new Driver("Clientes", "Clientes", (String) null, "Clientes", localDate0, 3415, 3415, boolean0, 50.0, arrayList0, 0, 50.0, 3415, (String) null, "Clientes", 0);
      treeSet0.add(driver0);
      String string0 = gUI0.printTD(treeSet0);
      assertEquals("1\t Clientes - 0\u20AC\n", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      GUI gUI0 = new GUI();
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Client client0 = new Client("94A9tbj_N", "94A9tbj_N", (String) null, "W[=bB ", localDate0);
      String string0 = gUI0.printClient(client0);
      assertEquals("Nome: 94A9tbj_N\nEmail: 94A9tbj_N\nMorada: W[=bB \nData de nascimento: 2014-02-14\nViagens totais: 0\nDist\u00E2ncia percorrida: 0km\nDinheiro gasto: 0\u20AC\nPontos: 0", string0);
  }

  /*@Test(timeout = 4000)
  public void test005()  throws Throwable  {
      GUI gUI0 = new GUI();
      Company company0 = new Company("\neMail : ", ":b0zI:\"<o|@m|D6ZZ");
      // Undeclared exception!
      try { 
        gUI0.usersTab(company0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      GUI gUI0 = new GUI();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      // Undeclared exception!
      try { 
        gUI0.userHeaderBox(point2D_Double0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.layout.VBox
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.printVehicle((Vehicle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.printTripsByDate("eB@WiRY0PxY1", (ArrayList<Trip>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      GUI gUI0 = new GUI();
      UMeR uMeR0 = gUI0.umer;
      Comparator<Client> comparator0 = (Comparator<Client>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(1904).when(comparator0).compare(any(uMer.Client.class) , any(uMer.Client.class));
      TreeSet<Client> treeSet0 = uMeR0.ordClient(comparator0);
      treeSet0.add((Client) null);
      // Undeclared exception!
      try { 
        gUI0.printTopMoney(treeSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      GUI gUI0 = new GUI();
      HashMap<Integer, Company> hashMap0 = new HashMap<Integer, Company>();
      hashMap0.put((Integer) null, (Company) null);
      // Undeclared exception!
      try { 
        gUI0.printIdentifier(hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.printDriver((Driver) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.printCompany((Company) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      GUI gUI0 = new GUI();
      Point2D.Double point2D_Double0 = new Point2D.Double(1.25, 0.0);
      // Undeclared exception!
      try { 
        gUI0.newTrip((Client) null, "Viagem de (", point2D_Double0, point2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.moneyGeneratedBetweenBox();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.layout.VBox
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.loginCheck((String) null, "bHb!B(%(0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      GUI gUI0 = new GUI();
      Integer integer0 = new Integer(4363);
      // Undeclared exception!
      try { 
        gUI0.infoTab(integer0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.layout.VBox
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.driverMenu();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.layout.VBox
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.companyRegisterBox();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.control.Label
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.companiesTab();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.layout.VBox
         //
         verifyException("uMer.GUI", e);
      }
  }
*/
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      GUI gUI0 = new GUI();
      String string0 = gUI0.printDistance(60.0);
      assertEquals("60km", string0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      GUI gUI0 = new GUI();
      gUI0.saveData();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      GUI gUI0 = new GUI();
      String string0 = gUI0.printMoney(1777.38825644343);
      assertEquals("1777\u20AC", string0);
  }

 /* @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      GUI gUI0 = new GUI();
      UMeR uMeR0 = gUI0.umer;
      Comparator<Driver> comparator0 = (Comparator<Driver>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(comparator0).compare(any(uMer.Driver.class) , any(uMer.Driver.class));
      TreeSet<Driver> treeSet0 = uMeR0.ordDriver(comparator0);
      treeSet0.add((Driver) null);
      // Undeclared exception!
      try { 
        gUI0.printTopRating(treeSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.GUI", e);
      }
  }*/

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      GUI gUI0 = new GUI();
      UMeR uMeR0 = new UMeR();
      Comparator<Driver> comparator0 = (Comparator<Driver>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      TreeSet<Driver> treeSet0 = uMeR0.ordDriver(comparator0);
      String string0 = gUI0.printTopRating(treeSet0);
      assertEquals("", string0);
  }

 /* @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      GUI gUI0 = new GUI();
      UMeR uMeR0 = gUI0.umer;
      Comparator<Driver> comparator0 = (Comparator<Driver>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(635).when(comparator0).compare(any(uMer.Driver.class) , any(uMer.Driver.class));
      TreeSet<Driver> treeSet0 = uMeR0.ordDriver(comparator0);
      treeSet0.add((Driver) null);
      // Undeclared exception!
      try { 
        gUI0.printTD(treeSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.GUI", e);
      }
  }*/

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      GUI gUI0 = new GUI();
      TreeSet<Driver> treeSet0 = new TreeSet<Driver>();
      String string0 = gUI0.printTD(treeSet0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      GUI gUI0 = new GUI();
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("", "", "", "Muito Mau", localDate0, 1626.8077078526, "Muito Mau");
      UMeR uMeR0 = new UMeR();
      Comparator<Driver> comparator0 = (Comparator<Driver>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(comparator0).compare(any(uMer.Driver.class) , any(uMer.Driver.class));
      TreeSet<Driver> treeSet0 = uMeR0.ordDriver(comparator0);
      treeSet0.add(driver0);
      String string0 = gUI0.printTopMoney(treeSet0);
      assertEquals("1\t  - 0\u20AC\n", string0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      GUI gUI0 = new GUI();
      TreeSet<Driver> treeSet0 = new TreeSet<Driver>();
      String string0 = gUI0.printTopMoney(treeSet0);
      assertEquals("", string0);
  }

  /*@Test(timeout = 4000)
  public void test029()  throws Throwable  {
      GUI gUI0 = new GUI();
      HashMap<Helicopter, String> hashMap0 = new HashMap<Helicopter, String>(869);
      Point2D.Double point2D_Double0 = new Point2D.Double((-111.7035574981), 2963.0657);
      Helicopter helicopter0 = new Helicopter("\n\n", 869, point2D_Double0, "\n\n");
      hashMap0.put(helicopter0, "\n\n");
      // Undeclared exception!
      try { 
        gUI0.printIdentifier(hashMap0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to uMer.Company
         //
         verifyException("uMer.GUI", e);
      }
  }*/

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      GUI gUI0 = new GUI();
      HashMap<Helicopter, Client> hashMap0 = new HashMap<Helicopter, Client>();
      Period period0 = Period.ofDays(48);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Client client0 = new Client("lif!Z}", "cl'en~", "lif!Z}", "cl'en~", localDate0);
      hashMap0.put((Helicopter) null, client0);
      TreeSet<String> treeSet0 = gUI0.printIdentifier(hashMap0);
      assertTrue(treeSet0.contains("lif!Z}"));
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      GUI gUI0 = new GUI();
      HashMap<Boolean, Van> hashMap0 = new HashMap<Boolean, Van>();
      Boolean boolean0 = new Boolean(true);
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, 0.0);
      Van van0 = new Van("{_x])5u)+*A9qR7e", 0.0, point2D_Double0, ":2sGs.s,sCT)O");
      hashMap0.put(boolean0, van0);
      TreeSet<String> treeSet0 = gUI0.printIdentifier(hashMap0);
      assertTrue(treeSet0.contains("{_x])5u)+*A9qR7e"));
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      GUI gUI0 = new GUI();
      LocalDate localDate0 = MockLocalDate.ofEpochDay(3886L);
      Driver driver0 = new Driver("[Rqo'7*5\u00069 ;N5N;?", "[Rqo'7*5\u00069 ;N5N;?", "Posi\u00E7\u00E3o final", "Posi\u00E7\u00E3o final", localDate0, 3886L, "d!B` pn$FSG");
      ArrayList<String> arrayList0 = gUI0.printTrips(driver0);
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      GUI gUI0 = new GUI();
      ArrayList<String> arrayList0 = gUI0.printTrips((Object) null);
      assertTrue(arrayList0.isEmpty());
  }

  /*@Test(timeout = 4000)
  public void test034()  throws Throwable  {
      GUI gUI0 = new GUI();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Van van0 = new Van("C)Gk1&\"y*S[0#t7]", (-78.504008), point2D_Double0, "rHTgKi,!pAkF");
      // Undeclared exception!
      try { 
        gUI0.printTrips(van0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // uMer.Van cannot be cast to uMer.Company
         //
         verifyException("uMer.GUI", e);
      }
  }*/

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      GUI gUI0 = new GUI();
      UMeR uMeR0 = new UMeR();
      ArrayList<Trip> arrayList0 = uMeR0.getTrips();
      Point2D.Double point2D_Double0 = new Point2D.Double(975, 0.0);
      Period period0 = Period.ofDays(1934);
      IsoChronology isoChronology0 = period0.getChronology();
      ZoneId zoneId0 = ZoneId.systemDefault();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0, zoneId0);
      Trip trip0 = new Trip(975, point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) point2D_Double0.y, localDate0, ":>('E0FE<`h", "r|[GPC", (String) null, 975, 1713.492196197, point2D_Double0, 110.0, 1934, 0.0);
      arrayList0.add(trip0);
      String string0 = gUI0.printTripsByDate("r|[GPC", arrayList0);
      assertEquals("", string0);
  }

  /*@Test(timeout = 4000)
  public void test036()  throws Throwable  {
      GUI gUI0 = new GUI();
      LocalDate localDate0 = MockLocalDate.now();
      // Undeclared exception!
      try { 
        gUI0.moneyGeneratedBetween((String) null, localDate0, localDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.vehiclesTab((Company) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.layout.VBox
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      GUI gUI0 = new GUI();
      Company company0 = new Company((String) null, "Ad}zDp<.");
      // Undeclared exception!
      try { 
        gUI0.vehiclesTab(company0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.layout.VBox
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.usersTab((Company) null, "images/check-mark_small.png");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.layout.VBox
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      GUI gUI0 = new GUI();
      Company company0 = new Company("+h$vS%Xq}Tk+TB~=/i}", "]:8yMFDV[\"");
      // Undeclared exception!
      try { 
        gUI0.usersTab(company0, "client");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.layout.VBox
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.tripsTab((Object) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.layout.VBox
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.tripsTab("X");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.layout.VBox
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.datesBox();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.control.ComboBox
         //
         verifyException("uMer.GUI", e);
      }
  }
*/
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      GUI gUI0 = new GUI();
      boolean boolean0 = gUI0.loginCheck("admin", "admin");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      GUI gUI0 = new GUI();
      boolean boolean0 = gUI0.addCompany("QJ*Vc![;Nvzi>VZk!{", "Ad}zDp<.");
      boolean boolean1 = gUI0.loginCheck("QJ*Vc![;Nvzi>VZk!{", (String) null);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      GUI gUI0 = new GUI();
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-4721L));
      Client client0 = new Client("\nDono: ", "", "admin", "uMer.Bike", localDate0);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Trip trip0 = gUI0.newTrip(client0, "?c#", point2D_Double0, point2D_Double0);
      assertNull(trip0);
  }

 /* @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      GUI gUI0 = new GUI();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      // Undeclared exception!
      try { 
        gUI0.addVehicle("^!>lBx", "Mota", "Entrar \uD83D\uDEAA ", point2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      GUI gUI0 = new GUI();
      Point2D.Double point2D_Double0 = new Point2D.Double((-3128.21897715), (-3128.21897715));
      // Undeclared exception!
      try { 
        gUI0.addVehicle("--condutor-mais-pr\u00F3ximo--", "driver", "Mau", point2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }*/

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      GUI gUI0 = new GUI();
      boolean boolean0 = gUI0.addVehicle("DAvUzCx@T{.D$8BQ#UI", "DAvUzCx@T{.D$8BQ#UI", "DAvUzCx@T{.D$8BQ#UI", (Point2D.Double) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      GUI gUI0 = new GUI();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      boolean boolean0 = gUI0.addVehicle("m:", "lu69\"-of!m;6eG", (String) null, point2D_Double0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      GUI gUI0 = new GUI();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      boolean boolean0 = gUI0.addVehicle("Mota", (String) null, "Entrar \uD83D\uDEAA ", point2D_Double0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      GUI gUI0 = new GUI();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      boolean boolean0 = gUI0.addVehicle("", "z5'^IaT(O", "", point2D_Double0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      GUI gUI0 = new GUI();
      Point2D.Double point2D_Double0 = new Point2D.Double(726.4307787278524, 0.0);
      boolean boolean0 = gUI0.addVehicle((String) null, (String) null, (String) null, point2D_Double0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      GUI gUI0 = new GUI();
      boolean boolean0 = gUI0.addCompany("admin", "PA?W");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      GUI gUI0 = new GUI();
      boolean boolean0 = gUI0.addCompany("e?\")YqJ'", "");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      GUI gUI0 = new GUI();
      boolean boolean0 = gUI0.addCompany("bHb!B(%(0", (String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      GUI gUI0 = new GUI();
      boolean boolean0 = gUI0.addCompany("", ",");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      GUI gUI0 = new GUI();
      boolean boolean0 = gUI0.addCompany((String) null, "bHb!B(%(0");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      GUI gUI0 = new GUI();
      Period period0 = Period.ofYears(1900);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      boolean boolean0 = gUI0.addDriver(",", "client", "Ad}zDp<.", "", localDate0, "\nFila de espera : ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      GUI gUI0 = new GUI();
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      boolean boolean0 = gUI0.addDriver("?Fp8]5.xF9'GQ`--", "", "?Fp8]5.xF9'GQ`--", "?Fp8]5.xF9'GQ`--", localDate0, "Ze7~5Xm5yPz");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      GUI gUI0 = new GUI();
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-2866L));
      boolean boolean0 = gUI0.addDriver("", "xg,~\"*zi]5", "]1", "\neMail : ", localDate0, "\neMail : ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      GUI gUI0 = new GUI();
      boolean boolean0 = gUI0.addDriver("", "", "6WD'#]t!;pZ", "", (LocalDate) null, "6WD'#]t!;pZ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      GUI gUI0 = new GUI();
      Period period0 = Period.ofDays(1825);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      boolean boolean0 = gUI0.addDriver("Condutor registado com sucesso!", "LogIn", "Condutor registado com sucesso!", (String) null, localDate0, (String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      GUI gUI0 = new GUI();
      boolean boolean0 = gUI0.addDriver("", "P;", (String) null, "P;", (LocalDate) null, "Posi\u00E7\u00E3o atual");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      GUI gUI0 = new GUI();
      Period period0 = Period.of((-2265), 100, (-1448399148));
      IsoChronology isoChronology0 = period0.getChronology();
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0, (ZoneId) zoneOffset0);
      boolean boolean0 = gUI0.addDriver("%P/ agS<'4z;<", (String) null, (String) null, "XYG~;Qrz{hNZp", localDate0, "XYG~;Qrz{hNZp");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      GUI gUI0 = new GUI();
      boolean boolean0 = gUI0.addDriver((String) null, "SU-H6~i5UAqgb?5w", (String) null, (String) null, (LocalDate) null, "SU-H6~i5UAqgb?5w");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      GUI gUI0 = new GUI();
      JapaneseDate japaneseDate0 = MockJapaneseDate.now();
      LocalDate localDate0 = MockLocalDate.from(japaneseDate0);
      boolean boolean0 = gUI0.addClient("Carrinha", "m:", "", "=]O1", localDate0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      GUI gUI0 = new GUI();
      JapaneseDate japaneseDate0 = MockJapaneseDate.now();
      LocalDate localDate0 = MockLocalDate.from(japaneseDate0);
      boolean boolean0 = gUI0.addClient("Carrinha", "m:", "CASPIAN", "=]O1", localDate0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      GUI gUI0 = new GUI();
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-4721L));
      boolean boolean0 = gUI0.addClient("", "", "\nDono: ", "-i%*&jK7wl|r4/", localDate0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      GUI gUI0 = new GUI();
      boolean boolean0 = gUI0.addClient("", "", "", "", (LocalDate) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      GUI gUI0 = new GUI();
      Period period0 = Period.ofWeeks(6);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      boolean boolean0 = gUI0.addClient("E", "E", " - ", (String) null, localDate0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      GUI gUI0 = new GUI();
      boolean boolean0 = gUI0.addClient(":2sGs.s,sCT)O", "{_x])5u)+*A9qR7e", (String) null, (String) null, (LocalDate) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      GUI gUI0 = new GUI();
      ZoneId zoneId0 = ZoneId.systemDefault();
      LocalDate localDate0 = MockLocalDate.now(zoneId0);
      boolean boolean0 = gUI0.addClient("2&[@E,PQw1H", (String) null, "2&[@E,PQw1H", (String) null, localDate0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      GUI gUI0 = new GUI();
      JapaneseDate japaneseDate0 = MockJapaneseDate.now();
      LocalDate localDate0 = MockLocalDate.from(japaneseDate0);
      boolean boolean0 = gUI0.addClient("Carrinha", "", "CASPIAN", "=Y1", localDate0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      GUI gUI0 = new GUI();
      LocalDate localDate0 = MockLocalDate.now();
      boolean boolean0 = gUI0.addClient((String) null, (String) null, "A3sb", "\nClassifica\u00E7\u00E3o : ", localDate0);
      assertFalse(boolean0);
  }

 /* @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.adminMenu();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.layout.VBox
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.passwordRegisterBox("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.control.Label
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.driverSignupMenu();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.layout.VBox
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.positionBox("Razo\u00E1vel");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.layout.HBox
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.textRegisterBox("aR@U8");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.control.Label
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.loadMenu();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // javafx.scene.Node
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.vehicleSignupMenu();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.layout.VBox
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.vehicleConditionBox();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.control.Label
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.printClient((Client) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.GUI", e);
      }
  }*/

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      GUI gUI0 = new GUI();
      Period period0 = Period.ofDays(1825);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Boolean boolean0 = Boolean.FALSE;
      UMeR uMeR0 = new UMeR();
      ArrayList<Trip> arrayList0 = uMeR0.getTrips();
      Driver driver0 = new Driver("images/logo_taxi_small.png", "images/logo_taxi_small.png", "images/logo_taxi_small.png", "images/logo_taxi_small.png", localDate0, 1825, 1825, boolean0, (-805.8175170706), arrayList0, 1825, 60.0, (-805.8175170706), "LogIn", "CASPIAN", (-805.8175170706));
      String string0 = gUI0.printDriver(driver0);
      assertEquals("Nome: images/logo_taxi_small.png\nEmail: images/logo_taxi_small.png\nMorada: images/logo_taxi_small.png\nData de nascimento: 2014-02-14\nViagens totais: 0\nDist\u00E2ncia percorrida: 1825km\nDinheiro ganho: 60\u20AC\nN\u00FAmero de classifica\u00E7\u00F5es: 1825\nClassfica\u00E7\u00E3o: 1825\nExperi\u00EAncia: 0\nDesvio total: -805\u20AC\nVe\u00EDculo: LogIn\nEmpresa: CASPIAN", string0);
  }

  /*@Test(timeout = 4000)
  public void test087()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.errorLabel("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.control.Label
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.companySignup();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.layout.VBox
         //
         verifyException("uMer.GUI", e);
      }
  }*/

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      GUI gUI0 = new GUI();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Helicopter helicopter0 = new Helicopter("admin", 0.9, point2D_Double0, "admin");
      String string0 = gUI0.printVehicle(helicopter0);
      assertEquals("Matr\u00EDcula: admin\nClass: Helicopter\nVelocidade: 110.0 km/s\nPre\u00E7o (por km): 8.5\u20AC\nLugares: 3\nFator de confian\u00E7a: 0\nPosi\u00E7\u00E3o Atual: 0.0 , 0.0\nN\u00FAmero de viagens: 0\nDono: admin", string0);
  }

  /*@Test(timeout = 4000)
  public void test090()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.vehicleClassBox();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.control.Label
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.clientSignupMenu();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.layout.VBox
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.loginMenu();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.layout.VBox
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.successLabel("&ETY]");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.control.Label
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.backButton();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.control.Button
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.companyMenu();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.layout.VBox
         //
         verifyException("uMer.GUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      GUI gUI0 = new GUI();
      String[] stringArray0 = new String[9];
      // Undeclared exception!
      try { 
        gUI0.Main(stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      GUI gUI0 = new GUI();
      // Undeclared exception!
      try { 
        gUI0.doneRegisterButton();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class javafx.scene.control.Button
         //
         verifyException("uMer.GUI", e);
      }
  }
*/
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      GUI gUI0 = new GUI();
      String string0 = gUI0.printAdminInfo();
      assertEquals("N\u00FAmero de viagens : 0\nN\u00FAmero de condutores : 0\nN\u00FAmero de ve\u00EDculos : 0\nN\u00FAmero de empresas : 0\nN\u00FAmero de clientes : 0\nDinheiro gerado : 0\u20AC\nDist\u00E2ncia total : 0km\nTempo total : 0h:0m:0s", string0);
  }

 /* @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      GUI gUI0 = new GUI();
      try { 
        gUI0.start((Stage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.GUI", e);
      }
  }
*/
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      GUI gUI0 = new GUI();
      Company company0 = new Company("Ad}zDp<.", "Ad}zDp<.");
      String string0 = gUI0.printCompany(company0);
      assertEquals("Nome: Ad}zDp<.\nN\u00FAmero de condutores: 0\nN\u00FAmero de ve\u00EDculos: 0\nN\u00FAmero de viagens: 0\nDinheiro gerado: 0\u20AC", string0);
  }
}
