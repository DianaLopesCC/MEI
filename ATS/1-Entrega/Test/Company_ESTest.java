/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 17 23:22:38 GMT 2018
 */

package uMer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.Point2D;
import java.time.Clock;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.IsoChronology;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.junit.runner.RunWith;
import uMer.Bike;
import uMer.Company;
import uMer.Driver;
import uMer.Helicopter;
import uMer.Trip;
import uMer.Vehicle;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Company_ESTest extends Company_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Company company0 = new Company("", "");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Point2D.Double point2D_Double1 = new Point2D.Double(618.349465058052, 89);
      LocalDate localDate0 = MockLocalDate.ofEpochDay(89);
      Trip trip0 = new Trip(89, point2D_Double0, point2D_Double1, (Double) point2D_Double1.x, (Double) 618.349465058052, localDate0, "", "", "", 89, 89.0, point2D_Double1, 0.0, 273.3806624817, 1.0);
      company0.addTrip(trip0);
      assertEquals(618.349465058052, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Company company0 = new Company("\n", "");
      company0.printDrivers();
      assertEquals(0, company0.getPoints());
      assertEquals("\n", company0.getName());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals("", company0.getPassword());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Company company0 = new Company("", "");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Bike bike0 = new Bike("", (-3442.39170371), point2D_Double0, "");
      company0.addVehicle(bike0);
      String string0 = company0.pickVehicle(point2D_Double0);
      assertEquals(0, company0.getPoints());
      assertNotNull(string0);
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Company company0 = new Company("", "");
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-499L));
      Boolean boolean0 = Boolean.TRUE;
      Driver driver0 = new Driver("", "", "", ")\nPontos : ", localDate0, 4642.11520409902, 4642.11520409902, boolean0, 1.0, (ArrayList<Trip>) null, (-5), (-1.0), 1.0, "", (String) null, 1.0);
      company0.addDriver(driver0);
      String string0 = company0.pickDriver();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Company company0 = new Company("\n", "r( ");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      LocalDate localDate0 = MockLocalDate.now();
      Trip trip0 = new Trip((-1), point2D_Double0, point2D_Double0, (Double) 75.0, (Double) 75.0, localDate0, "\n", "\n", "\n", (-1), (-69.1171735139), point2D_Double0, 2122.39204941, 0.0, (-69.1171735139));
      company0.addTrip(trip0);
      int int0 = company0.moneyGeneratedBetween(localDate0, localDate0);
      assertEquals(75, company0.getPoints());
      assertEquals(75, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Company company0 = new Company("\n", "\n");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      LocalDate localDate0 = MockLocalDate.now();
      Trip trip0 = new Trip((-1), point2D_Double0, point2D_Double0, (Double) (-1.0), (Double) (-1.0), localDate0, "\n", "\n", "\n", (-1), (-69.1171735139), point2D_Double0, (-1), 0.0, (-69.1171735139));
      company0.addTrip(trip0);
      int int0 = company0.moneyGeneratedBetween(localDate0, localDate0);
      assertEquals((-1), company0.getPoints());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Company company0 = new Company("!`oc_\"7E#Ww{*", "!`oc_\"7E#Ww{*");
      company0.getVehicles();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Company company0 = new Company("\nGrau de cumprimento : ", "\nGrau de cumprimento : ");
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, 2039.048520538712);
      Period period0 = Period.ofWeeks((-649));
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Trip trip0 = new Trip((-649), point2D_Double0, point2D_Double0, (Double) point2D_Double0.x, (Double) 0.0, localDate0, "", "", "\nGrau de cumprimento : ", (-1321), 0.0, point2D_Double0, 2039.048520538712, (-649), (-1899.0337128));
      company0.addTrip(trip0);
      company0.getTrips();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Company company0 = new Company("", "");
      Trip trip0 = new Trip();
      company0.addTrip(trip0);
      company0.getTotalTrips();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Company company0 = new Company("\nClassifica\u00E7\u00E3o : ", "O|9I%Sf");
      Point2D.Double point2D_Double0 = new Point2D.Double((-1), 0.0);
      Double double0 = new Double(1406.197208533098);
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Trip trip0 = new Trip((-1), point2D_Double0, point2D_Double0, (Double) (-1.0), double0, localDate0, "8qa!8dP,XA", "O|9I%Sf", "\nN\u00FAmero de viagens :", 2, 75.0, point2D_Double0, (-1.0), 0.0, (-1585.0));
      company0.addTrip(trip0);
      int int0 = company0.getPoints();
      assertEquals(1406.197208533098, company0.getMoneyGenerated(), 0.01);
      assertEquals(1406, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Company company0 = new Company("\n", "");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Period period0 = Period.ofMonths((-1));
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Trip trip0 = new Trip(4354, point2D_Double0, point2D_Double0, (Double) (-1.0), (Double) (-1.0), localDate0, "\n", "O#[yZ,x^r_^Zue", "", 4142, 1.5, point2D_Double0, (-1.0), 8.5, 4142);
      company0.addTrip(trip0);
      int int0 = company0.getPoints();
      assertEquals((-1.0), company0.getMoneyGenerated(), 0.01);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Company company0 = new Company((String) null, (String) null);
      company0.getPassword();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Company company0 = new Company("c'jlyY,]DS", "");
      String string0 = company0.getPassword();
      assertEquals("c'jlyY,]DS", company0.getName());
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Company company0 = new Company((String) null, (String) null);
      company0.getName();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Company company0 = new Company("Oq$", "Oq$");
      company0.getName();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Company company0 = new Company("\n", "r( ");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      LocalDate localDate0 = MockLocalDate.now();
      Trip trip0 = new Trip((-1), point2D_Double0, point2D_Double0, (Double) 75.0, (Double) 75.0, localDate0, "\n", "\n", "\n", (-1), (-69.1171735139), point2D_Double0, 2122.39204941, 0.0, (-69.1171735139));
      company0.addTrip(trip0);
      double double0 = company0.getMoneyGenerated();
      assertEquals(75, company0.getPoints());
      assertEquals(75.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Company company0 = new Company("\n", "\n");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      LocalDate localDate0 = MockLocalDate.now();
      Trip trip0 = new Trip((-1), point2D_Double0, point2D_Double0, (Double) (-1.0), (Double) (-1.0), localDate0, "\n", "\n", "\n", (-1), (-69.1171735139), point2D_Double0, (-1), 0.0, (-69.1171735139));
      company0.addTrip(trip0);
      double double0 = company0.getMoneyGenerated();
      assertEquals((-1), company0.getPoints());
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Company company0 = new Company("H}Vv=pgs{  tQ|sD-:", "H}Vv=pgs{  tQ|sD-:");
      Company company1 = new Company("R}M", "R}M");
      boolean boolean0 = company0.equals(company1);
      assertEquals(0.0, company1.getMoneyGenerated(), 0.01);
      assertEquals(0, company1.getPoints());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Company company0 = new Company("\n", "r( ");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      LocalDate localDate0 = MockLocalDate.now();
      Trip trip0 = new Trip((-1), point2D_Double0, point2D_Double0, (Double) 75.0, (Double) 75.0, localDate0, "\n", "\n", "\n", (-1), (-69.1171735139), point2D_Double0, 2122.39204941, 0.0, (-69.1171735139));
      company0.addTrip(trip0);
      company0.clone();
      assertEquals(75.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Company company0 = new Company("*zDSLQ", "");
      Point2D.Double point2D_Double0 = new Point2D.Double(0, (-1628.73977022177));
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Trip trip0 = new Trip(0, point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) (-1628.73977022177), localDate0, "]CF?d2OWsm};`etgz", "\n---Condutores \n", "oy*BdZ6 fmPBl1ek", 1694, 1694, point2D_Double0, 0, 2653.450144061, 2653.450144061);
      company0.addTrip(trip0);
      company0.clone();
      assertEquals((-1628.73977022177), company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Company company0 = new Company("\n", "r( ");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      LocalDate localDate0 = MockLocalDate.now();
      Trip trip0 = new Trip((-1), point2D_Double0, point2D_Double0, (Double) 75.0, (Double) 0.0, localDate0, "\n", "\n", "\n", (-1), (-69.1171735139), point2D_Double0, 2122.39204941, 0.0, (-69.1171735139));
      company0.addTrip(trip0);
      // Undeclared exception!
      try { 
        company0.moneyGeneratedBetween((LocalDate) null, localDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.time.chrono.ChronoLocalDate", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Company company0 = new Company("", "");
      LocalDate localDate0 = MockLocalDate.now();
      Boolean boolean0 = Boolean.TRUE;
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Bike bike0 = new Bike("", 1.5, point2D_Double0, "");
      ArrayList<Trip> arrayList0 = bike0.getTrips();
      Trip trip0 = new Trip();
      arrayList0.add(trip0);
      Driver driver0 = new Driver("\neMail : ", "", "\neMail : ", "", localDate0, (-2761.551684111), 1.0, boolean0, (-6464.34), arrayList0, (-2401), (-2761.551684111), 1.0, "\neMail : ", "\neMail : ", 0.0);
      company0.addDriver(driver0);
      // Undeclared exception!
      try { 
        company0.getDrivers();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Company company0 = new Company("", "");
      Company company1 = new Company((String) null, "");
      // Undeclared exception!
      try { 
        company0.equals(company1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Company company0 = new Company("uMer.Company", "uMer.Company");
      // Undeclared exception!
      try { 
        company0.addVehicle((Vehicle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.Company", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Company company0 = new Company((String) null, (String) null);
      // Undeclared exception!
      try { 
        company0.addTrip((Trip) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.Company", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Company company0 = new Company("ky8v?UhP;@y-e", "fhd=3X<['%v`hvy6");
      // Undeclared exception!
      try { 
        company0.addDriver((Driver) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.Company", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Company company0 = null;
      try {
        company0 = new Company((Company) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.Company", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Company company0 = new Company("\n", "r( ");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Helicopter helicopter0 = new Helicopter("\nPre\u00E7o estimado : ", 75.0, point2D_Double0, "");
      company0.addVehicle(helicopter0);
      String string0 = company0.printVehicles();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals("r( ", company0.getPassword());
      assertEquals("null\nPre\u00E7o estimado : \n", string0);
      assertEquals(0, company0.getPoints());
      assertEquals("\n", company0.getName());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Company company0 = new Company("!`oc_\"7E#Ww{*", "!`oc_\"7E#Ww{*");
      company0.printVehicles();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Company company0 = new Company("", "");
      company0.getTrips();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Company company0 = new Company("", "");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Bike bike0 = new Bike("", 0.0, point2D_Double0, "");
      company0.addVehicle(bike0);
      company0.getVehicles();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Company company0 = new Company("", "");
      LocalDate localDate0 = MockLocalDate.now();
      Boolean boolean0 = Boolean.TRUE;
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Bike bike0 = new Bike("", 1.5, point2D_Double0, "");
      ArrayList<Trip> arrayList0 = bike0.getTrips();
      Driver driver0 = new Driver("\neMail : ", "", "\neMail : ", "", localDate0, (-2761.551684111), 1.0, boolean0, (-6464.34), arrayList0, (-2401), (-2761.551684111), 1.0, "\neMail : ", "\neMail : ", 0.0);
      company0.addDriver(driver0);
      company0.getDrivers();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Company company0 = new Company("Empresa ", "=>p;`!.Q");
      company0.getDrivers();
      assertEquals("Empresa ", company0.getName());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals("=>p;`!.Q", company0.getPassword());
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Company company0 = new Company("", "");
      company0.getName();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Company company0 = new Company("\n---Condutores \n", "\n---Condutores \n");
      int int0 = company0.getPoints();
      assertEquals(0, int0);
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Company company0 = new Company("!`oc_\"7E#Ww{*", "!`oc_\"7E#Ww{*");
      company0.getPassword();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Company company0 = new Company("\n", "r( ");
      double double0 = company0.getMoneyGenerated();
      assertEquals(0.0, double0, 0.01);
      assertEquals("\n", company0.getName());
      assertEquals(0, company0.getPoints());
      assertEquals("r( ", company0.getPassword());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Company company0 = new Company("w", "w");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      LocalDate localDate0 = MockLocalDate.now();
      Trip trip0 = new Trip((-58), point2D_Double0, point2D_Double0, (Double) 0.0, (Double) 0.0, localDate0, "w", "w", "w", (-58), (-58), point2D_Double0, 0.0, 0.0, (-58));
      company0.addTrip(trip0);
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      Clock clock0 = MockClock.tickMinutes(zoneOffset0);
      LocalDate localDate1 = MockLocalDate.now(clock0);
      int int0 = company0.moneyGeneratedBetween(localDate0, localDate1);
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Company company0 = new Company(";^%p~P", ";^%p~P");
      Trip trip0 = new Trip();
      company0.addTrip(trip0);
      LocalDate localDate0 = MockLocalDate.now();
      int int0 = company0.moneyGeneratedBetween(localDate0, localDate0);
      assertEquals(0, int0);
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Company company0 = new Company("w", "w");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      LocalDate localDate0 = MockLocalDate.now();
      Trip trip0 = new Trip((-58), point2D_Double0, point2D_Double0, (Double) 0.0, (Double) 0.0, localDate0, "w", "w", "w", (-58), (-58), point2D_Double0, 0.0, 0.0, (-58));
      company0.addTrip(trip0);
      LocalDate localDate1 = MockLocalDate.ofEpochDay((-58));
      int int0 = company0.moneyGeneratedBetween(localDate1, localDate0);
      assertEquals(0, company0.getPoints());
      assertEquals(0, int0);
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Company company0 = new Company(";^%p~P", ";^%p~P");
      Trip trip0 = new Trip();
      company0.addTrip(trip0);
      company0.addTrip(trip0);
      ArrayList<String> arrayList0 = company0.getDates();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
      assertEquals(1, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Company company0 = new Company("!`oc_\"7E#Ww{*", "!`oc_\"7E#Ww{*");
      company0.getDates();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Company company0 = new Company("\nN\u00FAmero de classifica\u00E7\u00F5es : ", "\nN\u00FAmero de classifica\u00E7\u00F5es : ");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Bike bike0 = new Bike("\nN\u00FAmero de classifica\u00E7\u00F5es : ", (-3439.099350473007), point2D_Double0, "\nN\u00FAmero de classifica\u00E7\u00F5es : ");
      company0.addVehicle(bike0);
      String string0 = company0.pickVehicle(point2D_Double0);
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertNotNull(string0);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Company company0 = new Company("!`oc_\"7E#Ww{*", "!`oc_\"7E#Ww{*");
      company0.pickVehicle((Point2D.Double) null);
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Company company0 = new Company("uMer.Client", "uMer.Client");
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("uMer.Client", "uMer.Client", "uMer.Client", "uMer.Client", localDate0, 1317L, "uMer.Client");
      company0.addDriver(driver0);
      String string0 = company0.pickDriver();
      assertNotNull(string0);
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Company company0 = new Company("\nN\u00FAmero de classifica\u00E7\u00F5es : ", "\nN\u00FAmero de classifica\u00E7\u00F5es : ");
      company0.pickDriver();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Company company0 = new Company("uMer.Client", "uMer.Client");
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("uMer.Client", "uMer.Client", "uMer.Client", "uMer.Client", localDate0, 1317L, "uMer.Client");
      company0.addDriver(driver0);
      boolean boolean0 = company0.availiableTaxis();
      assertTrue(boolean0);
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Company company0 = new Company(";^%p~P", ";^%p~P");
      boolean boolean0 = company0.availiableTaxis();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Company company0 = new Company("\nN\u00FAmero de classifica\u00E7\u00F5es : ", "\nN\u00FAmero de classifica\u00E7\u00F5es : ");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Bike bike0 = new Bike("\nN\u00FAmero de classifica\u00E7\u00F5es : ", (-3439.099350473007), point2D_Double0, "\nN\u00FAmero de classifica\u00E7\u00F5es : ");
      company0.addVehicle(bike0);
      String string0 = company0.toString();
      assertEquals("Empresa \nN\u00FAmero de classifica\u00E7\u00F5es : \n---Condutores \nnull\n---Ve\u00EDculos \nnull\nN\u00FAmero de classifica\u00E7\u00F5es : \n\nN\u00FAmero de viagens : 0\nDinheiro gerado : 0.0\n", string0);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Company company0 = new Company("uMer.Client", "uMer.Client");
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("uMer.Client", "uMer.Client", "uMer.Client", "uMer.Client", localDate0, 1317L, "uMer.Client");
      company0.addDriver(driver0);
      String string0 = company0.printDrivers();
      assertEquals("nulluMer.Client\n", string0);
      assertNotNull(string0);
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Company company0 = new Company(";^%p~P", ";^%p~P");
      Trip trip0 = new Trip();
      company0.addTrip(trip0);
      // Undeclared exception!
      try { 
        company0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Company company0 = new Company("\nN\u00FAmero de classifica\u00E7\u00F5es : ", "\nN\u00FAmero de classifica\u00E7\u00F5es : ");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Bike bike0 = new Bike("\nN\u00FAmero de classifica\u00E7\u00F5es : ", (-3439.099350473007), point2D_Double0, "\nN\u00FAmero de classifica\u00E7\u00F5es : ");
      company0.addVehicle(bike0);
      Company company1 = new Company(company0);
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company1.getPoints());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Company company0 = new Company(";^%p~P", ";^%p~P");
      company0.getTotalTrips();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Company company0 = new Company(";^%p~P", ";^%p~P");
      Company company1 = company0.clone();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company1.getPoints());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Company company0 = new Company(";^%p~P", ";^%p~P");
      company0.equals(company0);
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Company company0 = new Company("!`oc_\"7E#Ww{*", "!`oc_\"7E#Ww{*");
      Trip trip0 = new Trip();
      company0.addTrip(trip0);
      // Undeclared exception!
      try { 
        company0.getTrips();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.Trip", e);
      }
  }
}
