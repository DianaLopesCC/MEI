/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 17 23:24:51 GMT 2018
 */

package uMer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import uMer.Driver;
import uMer.RatingComparator;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RatingComparator_ESTest extends RatingComparator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RatingComparator ratingComparator0 = new RatingComparator();
      Double double0 = new Double(1304.238);
      Double double1 = new Double((-549.0417038875));
      Driver driver0 = mock(Driver.class, new ViolatedAssumptionAnswer());
      doReturn(double0, double0, double0, double1).when(driver0).getRating();
      doReturn("", "").when(driver0).getEmail();
      int int0 = ratingComparator0.compare(driver0, driver0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RatingComparator ratingComparator0 = new RatingComparator();
      Double double0 = new Double(251.0);
      Double double1 = new Double(4224.412175226);
      Driver driver0 = mock(Driver.class, new ViolatedAssumptionAnswer());
      doReturn(double0, double1, double1, (Double) null).when(driver0).getRating();
      // Undeclared exception!
      try { 
        ratingComparator0.compare(driver0, driver0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.RatingComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RatingComparator ratingComparator0 = new RatingComparator();
      Driver driver0 = mock(Driver.class, new ViolatedAssumptionAnswer());
      doReturn((Double) null).when(driver0).getRating();
      Driver driver1 = mock(Driver.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        ratingComparator0.compare(driver0, driver1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uMer.RatingComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RatingComparator ratingComparator0 = new RatingComparator();
      Double double0 = new Double(1304.238);
      Double double1 = new Double((-549.0417038875));
      Driver driver0 = mock(Driver.class, new ViolatedAssumptionAnswer());
      doReturn(double1, double1, double1, double0).when(driver0).getRating();
      int int0 = ratingComparator0.compare(driver0, driver0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RatingComparator ratingComparator0 = new RatingComparator();
      Double double0 = new Double(471.8);
      Double double1 = new Double((-2569.930673));
      Driver driver0 = mock(Driver.class, new ViolatedAssumptionAnswer());
      doReturn(double0, double1).when(driver0).getRating();
      int int0 = ratingComparator0.compare(driver0, driver0);
      assertEquals((-1), int0);
  }
}
